{
  "name": "loop-6",
  "version": "6.0.0",
  "description": "Loop 6 - Typing Analysis Desktop Application",
  "main": "dist/main/main/main.js",
  "scripts": {
    "dev": "concurrently -n \"next,main,electron\" -c \"blue,yellow,green\" \"yarn dev:next\" \"yarn build:main:watch\" \"yarn dev:electron\"",
    "dev:clean": "yarn cache:clear && yarn dev",
    "dev:debug": "concurrently -n \"next,main,electron\" -c \"blue,yellow,green\" \"yarn dev:next:debug\" \"yarn build:main:watch\" \"yarn dev:electron:debug\"",
    "dev:force": "yarn cache:clear && lsof -ti:5500 | xargs kill -9 2>/dev/null || true && yarn dev",
    "dev:next": "cross-env NEXT_PORT=5500 SILENT=true next dev -p 5500 --turbo",
    "dev:next:debug": "cross-env NEXT_PORT=5500 SILENT=false LOG_LEVEL=debug next dev -p 5500",
    "dev:electron": "cross-env NODE_ENV=development NEXT_HOST=localhost NEXT_PORT=5500 ELECTRON_ENABLE_LOGGING=false wait-on http://localhost:5500/api/health/ --timeout 60000 --interval 1000 --window 2000 && wait-on dist/main/main/main.js --timeout 30000 && curl -s http://localhost:5500/ > /dev/null && electron -r tsconfig-paths/register dist/main/main/main.js",
    "build:main:dev": "tsc -p tsconfig.main.json --watch",
    "dev:electron:debug": "cross-env NODE_ENV=development NEXT_HOST=localhost NEXT_PORT=5500 ELECTRON_ENABLE_LOGGING=true wait-on http://localhost:5500/api/health/ --timeout 60000 --interval 1000 --window 2000 --verbose && wait-on dist/main/main/main.js --timeout 30000 && curl -s http://localhost:5500/ > /dev/null && electron -r tsconfig-paths/register dist/main/main/main.js",
    "build": "yarn build:next && yarn build:main",
    "build:next": "cross-env NODE_ENV=production SILENT=true next build",
    "build:main": "tsc -p tsconfig.main.json",
    "build:main:watch": "tsc -p tsconfig.main.json --watch --preserveWatchOutput",
    "start": "cross-env NODE_ENV=production electron -r tsconfig-paths/register dist/main/main/main.js",
    "start:optimized": "cross-env NODE_ENV=production electron --expose-gc --max-old-space-size=256 --max-semi-space-size=8 --memory-pressure-off -r tsconfig-paths/register dist/main/main/main.js",
    "build:static": "cross-env NODE_ENV=production NEXT_EXPORT=true next build",
    "build:prod": "yarn clean && yarn build:static && yarn build:main && yarn build:native",
    "start:prod": "yarn build:prod && yarn start:optimized",
    "start:static": "cross-env NODE_ENV=production ELECTRON_STATIC=true electron --expose-gc --max-old-space-size=256 --max-semi-space-size=8 --memory-pressure-off -r tsconfig-paths/register dist/main/main/main.js",
    "type-check": "tsc --noEmit && tsc -p tsconfig.main.json --noEmit",
    "lint": "eslint src --ext .ts,.tsx --max-warnings 0",
    "lint:fix": "eslint src --ext .ts,.tsx --fix",
    "lint:main": "eslint src/main --ext .ts --max-warnings 0",
    "lint:check": "eslint --print-config src/main/main.ts | head -20",
    "clean": "rimraf dist .next",
    "cache:clear": "rimraf .next",
    "test:native": "yarn build:main && electron test-native-integration.js",
    "test:integration": "yarn build && yarn test:native",
    "build:native": "cd native-modules && cargo build --release --verbose",
    "build:native:debug": "cd native-modules && cargo build --verbose",
    "copy-native": "node scripts/copy-native.js",
    "native": "node scripts/copy-native.js",
    "native:test": "node scripts/copy-native.js --test",
    "native:rebuild": "node scripts/copy-native.js --rebuild",
    "native:debug": "node scripts/copy-native.js --debug --rebuild",
    "native:clean": "node scripts/copy-native.js --clean",
    "native:status": "node scripts/copy-native.js --status",
    "native:fix": "node scripts/copy-native.js --fix-permissions",
    "native:verbose": "node scripts/copy-native.js --verbose",
    "native:full": "yarn build:native && yarn copy-native",
    "copy-native-debug": "node scripts/copy-native.js --debug",
    "postinstall": "yarn build:native && yarn copy-native || echo 'Native module build failed, continuing with JS fallback'"
  },
  "dependencies": {
    "@prisma/client": "6.9.0",
    "@shadcn/ui": "^0.0.4",
    "@tanstack/react-query": "^5.80.6",
    "@types/recharts": "^2.0.1",
    "active-win": "8.0.0",
    "autoprefixer": "^10.4.21",
    "better-sqlite3": "^11.10.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "dotenv": "^16.4.7",
    "electron": "^36.4.0",
    "electron-is-dev": "^3.0.1",
    "electron-log": "^5.4.0",
    "electron-store": "^10.0.0",
    "lucide-react": "^0.513.0",
    "next": "^15.3.3",
    "next-themes": "^0.4.6",
    "node-machine-id": "^1.1.12",
    "postcss": "^8.5.4",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "recharts": "^2.15.3",
    "sqlite3": "^5.1.7",
    "systeminformation": "^5.27.1",
    "tailwind-merge": "^3.3.0",
    "tailwindcss": "^4.1.8",
    "tailwindcss-animate": "^1.0.7",
    "uiohook-napi": "^1.5.4",
    "winston": "^3.17.0"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.3.1",
    "@next/eslint-plugin-next": "^15.3.3",
    "@next/swc-darwin-arm64": "15.3.3",
    "@tailwindcss/postcss": "^4.1.8",
    "@types/better-sqlite3": "^7.6.13",
    "@types/electron": "^1.6.12",
    "@types/node": "^24.0.0",
    "@types/react": "^19.0.3",
    "@types/react-dom": "^19.0.3",
    "@typescript-eslint/eslint-plugin": "^8.34.0",
    "@typescript-eslint/parser": "^8.34.0",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "electron-rebuild": "^3.2.9",
    "electron-reload": "^2.0.0-alpha.1",
    "eslint": "^9.29.0",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "node-abi": "^4.9.0",
    "prisma": "6.9.0",
    "rimraf": "^6.0.1",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.34.0",
    "wait-on": "^8.0.2"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "packageManager": "yarn@4.9.2+sha512.1fc009bc09d13cfd0e19efa44cbfc2b9cf6ca61482725eb35bbc5e257e093ebf4130db6dfe15d604ff4b79efd8e1e8e99b25fa7d0a6197c9f9826358d4d65c3c"
}
