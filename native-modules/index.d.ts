/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export interface MemoryUsage {
  rss: string
  heapTotal: string
  heapUsed: string
  external: string
  timestamp: string
}
export interface MemoryStats {
  usage: MemoryUsage
  peakUsage: MemoryUsage
  averageUsage: MemoryUsage
  totalSamples: number
  monitoringDurationMs: string
}
/** 현재 메모리 사용량 획득 */
export declare function getMemoryUsage(): MemoryUsage | null
/** 메모리 모니터링 시작 */
export declare function startMemoryMonitoring(): boolean
/** 메모리 통계 가져오기 */
export declare function getMemoryStats(): MemoryStats | null
/** 메모리 모니터링 리셋 */
export declare function resetMemoryMonitoring(): boolean
export interface GpuInfo {
  name: string
  vendor: string
  driverVersion: string
  memoryTotal: string
  memoryUsed: string
  memoryFree: string
  utilization: number
  temperature: number
  timestamp: string
}
export interface GpuStats {
  current: GpuInfo
  peakUtilization: number
  averageUtilization: number
  peakMemoryUsed: string
  averageMemoryUsed: string
  totalSamples: number
  monitoringDurationMs: string
}
/** GPU 정보 가져오기 */
export declare function getGpuInfo(): GpuInfo | null
/** GPU 모니터링 시작 */
export declare function startGpuMonitoring(): boolean
/** GPU 통계 가져오기 */
export declare function getGpuStats(): GpuStats | null
/** GPU 모니터링 리셋 */
export declare function resetGpuMonitoring(): boolean
export interface WorkerTask {
  id: string
  taskType: string
  payload: string
  priority: number
  createdAt: string
  startedAt?: string
  completedAt?: string
  status: string
  result?: string
  error?: string
}
export interface WorkerStats {
  totalWorkers: number
  activeWorkers: number
  idleWorkers: number
  pendingTasks: number
  completedTasks: number
  failedTasks: number
  totalProcessed: number
  averageTaskDurationMs: number
  queueSize: number
  uptimeMs: string
}
/** 작업 추가 */
export declare function addWorkerTask(id: string, taskType: string, payload: string, priority?: number | undefined | null): boolean
/** 작업 상태 조회 */
export declare function getWorkerTaskStatus(taskId: string): WorkerTask | null
/** 워커 풀 통계 */
export declare function getWorkerStats(): WorkerStats | null
/** 대기 중인 작업 수 */
export declare function getPendingTaskCount(): number
/** 워커 풀 상태 리셋 */
export declare function resetWorkerPool(): boolean
/** CPU 집약적 작업 실행 */
export declare function executeCpuTask(data: string): string
/** 병렬 데이터 처리 */
export declare function processDataParallel(dataChunks: Array<string>): Array<string>
export interface SystemInfo {
  platform: string
  arch: string
  cpuCount: number
  totalMemory: string
  hostname: string
  uptime: string
  loadAverage: Array<number>
}
export interface FileHash {
  filePath: string
  md5: string
  sha256: string
  size: string
  modifiedTime: string
}
export interface PerformanceMetrics {
  operation: string
  durationMs: number
  memoryBefore: string
  memoryAfter: string
  timestamp: string
}
/** 시스템 정보 가져오기 */
export declare function getSystemInfo(): SystemInfo | null
/** 파일 해시 계산 */
export declare function calculateFileHash(filePath: string): FileHash | null
/** 성능 측정 시작 */
export declare function startPerformanceMeasurement(operation: string): string
/** 성능 측정 종료 */
export declare function endPerformanceMeasurement(measurementId: string): PerformanceMetrics | null
/** 디렉토리 크기 계산 */
export declare function calculateDirectorySize(dirPath: string): string
/** 문자열 유사도 계산 (Levenshtein distance) */
export declare function calculateStringSimilarity(str1: string, str2: string): number
/** JSON 유효성 검사 */
export declare function validateJson(jsonString: string): boolean
/** Base64 인코딩 */
export declare function encodeBase64(data: string): string
/** Base64 디코딩 */
export declare function decodeBase64(encoded: string): string | null
/** 랜덤 UUID 생성 */
export declare function generateUuid(): string
/** 타임스탬프 문자열 생성 */
export declare function getTimestampString(): string
/** 환경 변수 가져오기 */
export declare function getEnvVar(key: string): string | null
/** 프로세스 ID 가져오기 */
export declare function getProcessId(): number
export declare function getTimestamp(): string
/** 네이티브 모듈 버전 정보 반환 */
export declare function getNativeModuleVersion(): string
/** 시스템 정보 반환 */
export declare function getSystemInfo(): string
/** 네이티브 모듈 초기화 */
export declare function initializeNativeModules(): boolean
/** 네이티브 모듈 정리 */
export declare function cleanupNativeModules(): boolean
/** 네이티브 모듈 정보 반환 */
export declare function getNativeModuleInfo(): string
/** 네이티브 모듈 사용 가능 여부 확인 */
export declare function isNativeModuleAvailable(): boolean
