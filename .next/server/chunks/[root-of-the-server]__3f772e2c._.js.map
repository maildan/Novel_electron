{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop_6/src/lib/error-utils.ts"],"sourcesContent":["/**\n * 에러 처리 유틸리티\n */\n\nexport interface ApiError {\n  success: false;\n  error: string;\n  details?: string;\n  code?: string;\n}\n\nexport interface ApiSuccess<T = any> {\n  success: true;\n  data: T;\n}\n\nexport type ApiResponse<T = any> = ApiSuccess<T> | ApiError;\n\n/**\n * unknown 타입의 에러를 안전하게 처리\n */\nexport function getErrorMessage(error: unknown): string {\n  if (error instanceof Error) {\n    return error.message;\n  }\n  if (typeof error === 'string') {\n    return error;\n  }\n  if (error && typeof error === 'object' && 'message' in error) {\n    return String(error.message);\n  }\n  return '알 수 없는 오류가 발생했습니다';\n}\n\n/**\n * API 에러 응답 생성\n */\nexport function createErrorResponse(\n  message: string,\n  error: unknown,\n  code?: string\n): ApiError {\n  return {\n    success: false,\n    error: message,\n    details: process.env.NODE_ENV === 'development' ? getErrorMessage(error) : undefined,\n    code\n  };\n}\n\n/**\n * API 성공 응답 생성\n */\nexport function createSuccessResponse<T>(data: T): ApiSuccess<T> {\n  return {\n    success: true,\n    data\n  };\n}\n\n/**\n * Promise를 안전하게 실행하고 결과 반환\n */\nexport async function safeAsync<T>(\n  promise: Promise<T>\n): Promise<[T | null, Error | null]> {\n  try {\n    const result = await promise;\n    return [result, null];\n  } catch (error) {\n    return [null, error instanceof Error ? error : new Error(getErrorMessage(error))];\n  }\n}\n\n/**\n * 동기 함수를 안전하게 실행\n */\nexport function safeSync<T>(fn: () => T): [T | null, Error | null] {\n  try {\n    const result = fn();\n    return [result, null];\n  } catch (error) {\n    return [null, error instanceof Error ? error : new Error(getErrorMessage(error))];\n  }\n}\n"],"names":[],"mappings":"AAAA;;CAEC;;;;;;;AAmBM,SAAS,gBAAgB,KAAc;IAC5C,IAAI,iBAAiB,OAAO;QAC1B,OAAO,MAAM,OAAO;IACtB;IACA,IAAI,OAAO,UAAU,UAAU;QAC7B,OAAO;IACT;IACA,IAAI,SAAS,OAAO,UAAU,YAAY,aAAa,OAAO;QAC5D,OAAO,OAAO,MAAM,OAAO;IAC7B;IACA,OAAO;AACT;AAKO,SAAS,oBACd,OAAe,EACf,KAAc,EACd,IAAa;IAEb,OAAO;QACL,SAAS;QACT,OAAO;QACP,SAAS,uCAAyC,gBAAgB;QAClE;IACF;AACF;AAKO,SAAS,sBAAyB,IAAO;IAC9C,OAAO;QACL,SAAS;QACT;IACF;AACF;AAKO,eAAe,UACpB,OAAmB;IAEnB,IAAI;QACF,MAAM,SAAS,MAAM;QACrB,OAAO;YAAC;YAAQ;SAAK;IACvB,EAAE,OAAO,OAAO;QACd,OAAO;YAAC;YAAM,iBAAiB,QAAQ,QAAQ,IAAI,MAAM,gBAAgB;SAAQ;IACnF;AACF;AAKO,SAAS,SAAY,EAAW;IACrC,IAAI;QACF,MAAM,SAAS;QACf,OAAO;YAAC;YAAQ;SAAK;IACvB,EAAE,OAAO,OAAO;QACd,OAAO;YAAC;YAAM,iBAAiB,QAAQ,QAAQ,IAAI,MAAM,gBAAgB;SAAQ;IACnF;AACF","debugId":null}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop_6/src/app/api/getLogs/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { PrismaClient } from '@prisma/client';\nimport { createErrorResponse, createSuccessResponse } from '../../../lib/error-utils';\n\n// Export 모드 호환성을 위한 설정\nexport const dynamic = 'force-static';\nexport const revalidate = false;\n\nconst prisma = new PrismaClient();\n\nexport async function GET(request: NextRequest) {\n  try {\n    const searchParams = request.nextUrl.searchParams;\n    const limit = parseInt(searchParams.get('limit') || '100');\n    const offset = parseInt(searchParams.get('offset') || '0');\n\n    const logs = await prisma.typingLog.findMany({\n      orderBy: {\n        timestamp: 'desc'\n      },\n      take: limit,\n      skip: offset\n    });\n\n    const total = await prisma.typingLog.count();\n\n    return NextResponse.json(createSuccessResponse({\n      logs,\n      total,\n      hasMore: total > offset + limit\n    }));\n\n  } catch (error) {\n    console.error('로그 조회 중 오류:', error);\n    return NextResponse.json(\n      createErrorResponse('로그 조회에 실패했습니다', error),\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;AAGO,MAAM,UAAU;AAChB,MAAM,aAAa;AAE1B,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;AAExB,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,MAAM,eAAe,QAAQ,OAAO,CAAC,YAAY;QACjD,MAAM,QAAQ,SAAS,aAAa,GAAG,CAAC,YAAY;QACpD,MAAM,SAAS,SAAS,aAAa,GAAG,CAAC,aAAa;QAEtD,MAAM,OAAO,MAAM,OAAO,SAAS,CAAC,QAAQ,CAAC;YAC3C,SAAS;gBACP,WAAW;YACb;YACA,MAAM;YACN,MAAM;QACR;QAEA,MAAM,QAAQ,MAAM,OAAO,SAAS,CAAC,KAAK;QAE1C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,CAAA,GAAA,8HAAA,CAAA,wBAAqB,AAAD,EAAE;YAC7C;YACA;YACA,SAAS,QAAQ,SAAS;QAC5B;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,eAAe;QAC7B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB,CAAA,GAAA,8HAAA,CAAA,sBAAmB,AAAD,EAAE,iBAAiB,QACrC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}