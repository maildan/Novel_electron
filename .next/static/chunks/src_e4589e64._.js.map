{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop_6/src/app/components/ui/typing-box.tsx"],"sourcesContent":["'use client';\n\nimport React, { useRef, useState, useCallback, useEffect } from 'react';\nimport { Save, BarChart3, Timer, Target, FileText, Type } from 'lucide-react';\n\ninterface TypingBoxProps {\n  onComplete: (record: {\n    content: string;\n    keyCount: number;\n    typingTime: number;\n    timestamp: string;\n  }) => void;\n}\n\nconst IDLE_TIMEOUT = 3000; // 3초\n\nexport function TypingBox({ onComplete }: TypingBoxProps) {\n  const editorRef = useRef<HTMLDivElement>(null);\n  const [typingTime, setTypingTime] = useState<number>(0);\n  const [keyCount, setKeyCount] = useState<number>(0);\n  const [stats, setStats] = useState({\n    pages: 0,\n    words: 0,\n    charCount: 0,\n    charCountNoSpace: 0,\n    accuracy: 100,\n  });\n  \n  const idleTimerRef = useRef<NodeJS.Timeout | null>(null);\n  const typingTimerRef = useRef<NodeJS.Timeout | null>(null);\n  const compositionHandledRef = useRef<boolean>(false);\n  const totalKeystrokesRef = useRef<number>(0);\n\n  // 구글 문서 방식으로 통계 업데이트\n  const updateStats = useCallback(() => {\n    if (!editorRef.current) return;\n    \n    const content = editorRef.current.textContent ?? '';\n    \n    // 구글 문서 방식의 단어 수(공백 기준 어절 분리)\n    const words = content.trim().length > 0\n      ? content.trim().split(/\\s+/).length\n      : 0;\n    \n    // 글자 수(공백 포함) - 모든 글자 1개씩 카운트\n    const charCount = content.length;\n    \n    // 글자 수(공백 제외)\n    const charCountNoSpace = content.replace(/\\s/g, '').length;\n    \n    // 페이지 수 계산(600자 기준)\n    const pages = Math.max(1, Math.ceil(charCount / 600));\n    \n    // 정확도 계산\n    const accuracy = totalKeystrokesRef.current > 0 \n      ? Math.round((keyCount / totalKeystrokesRef.current) * 100)\n      : 100;\n\n    setStats({\n      pages,\n      words,\n      charCount,\n      charCountNoSpace,\n      accuracy,\n    });\n  }, [keyCount]);\n\n  const stopTyping = useCallback(() => {\n    if (typingTimerRef.current) {\n      clearInterval(typingTimerRef.current);\n      typingTimerRef.current = null;\n    }\n  }, []);\n\n  const startTyping = useCallback(() => {\n    if (typingTimerRef.current) clearInterval(typingTimerRef.current);\n    typingTimerRef.current = setInterval(() => {\n      setTypingTime(prev => prev + 1);\n    }, 1000);\n\n    if (idleTimerRef.current) clearTimeout(idleTimerRef.current);\n    idleTimerRef.current = setTimeout(stopTyping, IDLE_TIMEOUT);\n  }, [stopTyping]);\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    // e.key가 한 글자이거나 스페이스/엔터일 때만 카운트\n    if (e.key.length === 1 || e.key === ' ' || e.key === 'Enter') {\n      // 한글 완성형은 2타, 나머지는 1타로 계산\n      const isKorean = /[가-힣]/.test(e.key);\n      const keystrokeCount = isKorean ? 2 : 1;\n      \n      setKeyCount(prev => prev + keystrokeCount);\n      totalKeystrokesRef.current += keystrokeCount;\n      \n      startTyping();\n      updateStats();\n    }\n  }, [startTyping, updateStats]);\n\n  const handleCompositionEnd = useCallback((e: React.CompositionEvent<HTMLDivElement>) => {\n    compositionHandledRef.current = true;\n    let typeCount = 0;\n    \n    // 한글 완성형은 2타, 자음/모음은 1타, 다른 문자도 1타로 계산\n    for (const char of e.data) {\n      if (/[가-힣]/.test(char)) {\n        typeCount += 2; // 한글 완성형은 2타\n      } else if (/[ㄱ-ㅎ|ㅏ-ㅣ]/.test(char)) {\n        typeCount += 1; // 한글 자음/모음은 1타\n      } else {\n        typeCount += 1; // 그 외 문자는 1타\n      }\n    }\n    \n    setKeyCount(prev => prev + typeCount);\n    totalKeystrokesRef.current += typeCount;\n    \n    startTyping();\n    updateStats();\n  }, [startTyping, updateStats]);\n\n  const handleInput = useCallback((e: React.FormEvent<HTMLDivElement> & { data?: string }) => {\n    if (compositionHandledRef.current) {\n      compositionHandledRef.current = false;\n      return;\n    }\n    \n    if (e.data) {\n      // 각 문자별로 타수 계산\n      let inputTypeCount = 0;\n      for (const char of e.data) {\n        if (/[가-힣]/.test(char)) {\n          inputTypeCount += 2; // 한글 완성형은 2타\n        } else {\n          inputTypeCount += 1; // 그 외 문자는 1타\n        }\n      }\n      \n      setKeyCount(prev => prev + inputTypeCount);\n      totalKeystrokesRef.current += inputTypeCount;\n      \n      startTyping();\n      updateStats();\n    }\n  }, [startTyping, updateStats]);\n\n  const handleSave = async () => {\n    if (!editorRef.current) return;\n    \n    const content = editorRef.current.textContent ?? '';\n    const logData = {\n      content,\n      keyCount,\n      typingTime,\n      timestamp: new Date().toISOString(),\n    };\n    \n    onComplete(logData);\n    \n    // 저장 후 초기화\n    if (editorRef.current) editorRef.current.textContent = '';\n    setKeyCount(0);\n    setTypingTime(0);\n    totalKeystrokesRef.current = 0;\n    updateStats();\n  };\n\n  useEffect(() => {\n    return () => {\n      if (typingTimerRef.current) clearInterval(typingTimerRef.current);\n      if (idleTimerRef.current) clearTimeout(idleTimerRef.current);\n    };\n  }, []);\n\n  return (\n    <div className=\"w-full h-full flex flex-col bg-white dark:bg-gray-900 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n      {/* Status Bar */}\n      <div className=\"flex items-center justify-between p-4 border-b border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-800 rounded-t-lg\">\n        <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-7 gap-4 text-sm\">\n          <div className=\"flex items-center gap-2\">\n            <FileText className=\"w-4 h-4 text-blue-500\" />\n            <span className=\"text-gray-600 dark:text-gray-300\">\n              글자: {stats.charCount}({stats.charCountNoSpace})\n            </span>\n          </div>\n          \n          <div className=\"flex items-center gap-2\">\n            <Type className=\"w-4 h-4 text-green-500\" />\n            <span className=\"text-gray-600 dark:text-gray-300\">\n              단어: {stats.words}\n            </span>\n          </div>\n          \n          <div className=\"flex items-center gap-2\">\n            <BarChart3 className=\"w-4 h-4 text-purple-500\" />\n            <span className=\"text-gray-600 dark:text-gray-300\">\n              페이지: {stats.pages}\n            </span>\n          </div>\n          \n          <div className=\"flex items-center gap-2\">\n            <Target className=\"w-4 h-4 text-orange-500\" />\n            <span className=\"text-gray-600 dark:text-gray-300\">\n              타자: {keyCount}\n            </span>\n          </div>\n          \n          <div className=\"flex items-center gap-2\">\n            <Timer className=\"w-4 h-4 text-red-500\" />\n            <span className=\"text-gray-600 dark:text-gray-300\">\n              시간: {typingTime}초\n            </span>\n          </div>\n          \n          <div className=\"flex items-center gap-2\">\n            <BarChart3 className=\"w-4 h-4 text-indigo-500\" />\n            <span className=\"text-gray-600 dark:text-gray-300\">\n              타수: {typingTime > 0 ? Math.round((keyCount / typingTime) * 60) : 0}타/분\n            </span>\n          </div>\n          \n          <div className=\"flex items-center gap-2\">\n            <Target className=\"w-4 h-4 text-teal-500\" />\n            <span className=\"text-gray-600 dark:text-gray-300\">\n              정확도: {stats.accuracy}%\n            </span>\n          </div>\n        </div>\n        \n        <button\n          onClick={handleSave}\n          className=\"flex items-center gap-2 px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-md transition-colors duration-200 shadow-sm\"\n        >\n          <Save className=\"w-4 h-4\" />\n          저장\n        </button>\n      </div>\n      \n      {/* Editor */}        <div\n          ref={editorRef}\n          className=\"flex-1 p-6 outline-none resize-none bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100 leading-relaxed text-base overflow-auto\"\n          contentEditable\n          onKeyDown={handleKeyDown}\n          onCompositionEnd={handleCompositionEnd}\n          onInput={handleInput}\n          data-placeholder=\"여기에 타이핑을 시작하세요...\"\n          style={{\n            minHeight: '300px',\n            fontFamily: 'system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", sans-serif',\n            lineHeight: '1.6',\n        }}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 462, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop_6/src/app/components/ui/stats-chart.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useMemo } from 'react';\nimport { \n  BarChart, Bar, XAxis, YAxis, CartesianGrid, \n  Tooltip, Legend, ResponsiveContainer, LineChart, Line \n} from 'recharts';\nimport { BarChart3, Clock, FileText, Calendar, Activity } from 'lucide-react';\n\ninterface Log {\n  timestamp: string;\n  keyCount: number;\n  typingTime: number;\n  totalChars?: number;\n}\n\ninterface StatsChartProps {\n  logs: Log[];\n}\n\nexport function StatsChart({ logs }: StatsChartProps) {\n  const [chartType, setChartType] = useState<'daily' | 'hourly'>('daily');\n  const [dataType, setDataType] = useState<'keyCount' | 'typingTime' | 'totalChars'>('keyCount');\n  const [visualType, setVisualType] = useState<'bar' | 'line'>('bar');\n\n  const chartData = useMemo(() => {\n    if (!logs || logs.length === 0) return [];\n\n    if (chartType === 'daily') {\n      // 일별 데이터 집계\n      const dailyData: Record<string, { \n        date: string; \n        keyCount: number; \n        typingTime: number; \n        totalChars: number; \n        sessions: number;\n        averageWPM: number;\n      }> = {};\n      \n      logs.forEach(log => {\n        const date = new Date(log.timestamp).toLocaleDateString();\n        if (!dailyData[date]) {\n          dailyData[date] = {\n            date,\n            keyCount: 0,\n            typingTime: 0,\n            totalChars: 0,\n            sessions: 0,\n            averageWPM: 0\n          };\n        }\n        dailyData[date].keyCount += log.keyCount || 0;\n        dailyData[date].typingTime += log.typingTime || 0;\n        dailyData[date].totalChars += log.totalChars || 0;\n        dailyData[date].sessions += 1;\n      });\n      \n      // Calculate average WPM for each day\n      Object.values(dailyData).forEach(day => {\n        day.averageWPM = day.typingTime > 0 ? Math.round((day.keyCount / day.typingTime) * 60) : 0;\n      });\n      \n      return Object.values(dailyData).sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());\n    } else {\n      // 시간별 데이터 집계\n      const hourlyData: Record<string, { \n        hour: string; \n        keyCount: number; \n        typingTime: number; \n        totalChars: number; \n        sessions: number;\n        averageWPM: number;\n      }> = {};\n      \n      logs.forEach(log => {\n        const date = new Date(log.timestamp);\n        const hour = date.getHours();\n        const hourKey = `${hour}시`;\n        if (!hourlyData[hourKey]) {\n          hourlyData[hourKey] = {\n            hour: hourKey,\n            keyCount: 0,\n            typingTime: 0,\n            totalChars: 0,\n            sessions: 0,\n            averageWPM: 0\n          };\n        }\n        hourlyData[hourKey].keyCount += log.keyCount || 0;\n        hourlyData[hourKey].typingTime += log.typingTime || 0;\n        hourlyData[hourKey].totalChars += log.totalChars || 0;\n        hourlyData[hourKey].sessions += 1;\n      });\n      \n      // Calculate average WPM for each hour\n      Object.values(hourlyData).forEach(hour => {\n        hour.averageWPM = hour.typingTime > 0 ? Math.round((hour.keyCount / hour.typingTime) * 60) : 0;\n      });\n      \n      return Object.values(hourlyData).sort((a, b) => parseInt(a.hour) - parseInt(b.hour));\n    }\n  }, [logs, chartType]);\n\n  const getDataTypeLabel = (type: string) => {\n    switch (type) {\n      case 'keyCount': return '타자수';\n      case 'typingTime': return '타이핑 시간(초)';\n      case 'totalChars': return '총 문자수';\n      default: return '타자수';\n    }\n  };\n\n  const getDataTypeColor = (type: string) => {\n    switch (type) {\n      case 'keyCount': return '#3b82f6';\n      case 'typingTime': return '#10b981';\n      case 'totalChars': return '#f59e0b';\n      default: return '#3b82f6';\n    }\n  };\n\n  return (\n    <div className=\"w-full bg-white dark:bg-gray-900 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700\">\n      <div className=\"p-6 border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"flex items-center gap-2 mb-4\">\n          <BarChart3 className=\"w-6 h-6 text-blue-500\" />\n          <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">타이핑 통계 차트</h2>\n        </div>\n        \n        {/* Chart Controls */}\n        <div className=\"flex flex-wrap gap-4\">\n          {/* Period Selection */}\n          <div className=\"flex items-center gap-2\">\n            <Calendar className=\"w-4 h-4 text-gray-500\" />\n            <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">기간:</span>\n            <div className=\"flex rounded-md overflow-hidden border border-gray-300 dark:border-gray-600\">\n              <button \n                className={`px-3 py-1 text-sm transition-colors ${\n                  chartType === 'daily' \n                    ? 'bg-blue-500 text-white' \n                    : 'bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700'\n                }`}\n                onClick={() => setChartType('daily')}\n              >\n                일별\n              </button>\n              <button \n                className={`px-3 py-1 text-sm transition-colors border-l border-gray-300 dark:border-gray-600 ${\n                  chartType === 'hourly' \n                    ? 'bg-blue-500 text-white' \n                    : 'bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700'\n                }`}\n                onClick={() => setChartType('hourly')}\n              >\n                시간별\n              </button>\n            </div>\n          </div>\n          \n          {/* Chart Type Selection */}\n          <div className=\"flex items-center gap-2\">\n            <Activity className=\"w-4 h-4 text-gray-500\" />\n            <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">차트:</span>\n            <div className=\"flex rounded-md overflow-hidden border border-gray-300 dark:border-gray-600\">\n              <button \n                className={`px-3 py-1 text-sm transition-colors ${\n                  visualType === 'bar' \n                    ? 'bg-green-500 text-white' \n                    : 'bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700'\n                }`}\n                onClick={() => setVisualType('bar')}\n              >\n                막대\n              </button>\n              <button \n                className={`px-3 py-1 text-sm transition-colors border-l border-gray-300 dark:border-gray-600 ${\n                  visualType === 'line' \n                    ? 'bg-green-500 text-white' \n                    : 'bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700'\n                }`}\n                onClick={() => setVisualType('line')}\n              >\n                선형\n              </button>\n            </div>\n          </div>\n          \n          {/* Data Type Selection */}\n          <div className=\"flex items-center gap-2\">\n            <FileText className=\"w-4 h-4 text-gray-500\" />\n            <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">데이터:</span>\n            <div className=\"flex rounded-md overflow-hidden border border-gray-300 dark:border-gray-600\">\n              <button \n                className={`px-3 py-1 text-sm transition-colors ${\n                  dataType === 'keyCount' \n                    ? 'bg-purple-500 text-white' \n                    : 'bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700'\n                }`}\n                onClick={() => setDataType('keyCount')}\n              >\n                타자수\n              </button>\n              <button \n                className={`px-3 py-1 text-sm transition-colors border-l border-gray-300 dark:border-gray-600 ${\n                  dataType === 'typingTime' \n                    ? 'bg-purple-500 text-white' \n                    : 'bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700'\n                }`}\n                onClick={() => setDataType('typingTime')}\n              >\n                시간\n              </button>\n              <button \n                className={`px-3 py-1 text-sm transition-colors border-l border-gray-300 dark:border-gray-600 ${\n                  dataType === 'totalChars' \n                    ? 'bg-purple-500 text-white' \n                    : 'bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700'\n                }`}\n                onClick={() => setDataType('totalChars')}\n              >\n                문자수\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      {/* Chart */}\n      <div className=\"p-6\">\n        <div className=\"h-96\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            {visualType === 'bar' ? (\n              <BarChart\n                data={chartData}\n                margin={{ top: 20, right: 30, left: 20, bottom: 30 }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" className=\"opacity-30\" />\n                <XAxis \n                  dataKey={chartType === 'daily' ? 'date' : 'hour'}\n                  angle={-45}\n                  textAnchor=\"end\"\n                  height={70}\n                  className=\"text-xs fill-gray-600 dark:fill-gray-400\"\n                />\n                <YAxis className=\"text-xs fill-gray-600 dark:fill-gray-400\" />\n                <Tooltip\n                  contentStyle={{\n                    backgroundColor: 'rgba(255, 255, 255, 0.95)',\n                    border: '1px solid #e5e7eb',\n                    borderRadius: '8px',\n                    boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)'\n                  }}\n                />\n                <Legend />\n                <Bar \n                  dataKey={dataType}\n                  name={getDataTypeLabel(dataType)}\n                  fill={getDataTypeColor(dataType)}\n                  radius={[4, 4, 0, 0]}\n                />\n              </BarChart>\n            ) : (\n              <LineChart\n                data={chartData}\n                margin={{ top: 20, right: 30, left: 20, bottom: 30 }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" className=\"opacity-30\" />\n                <XAxis \n                  dataKey={chartType === 'daily' ? 'date' : 'hour'}\n                  angle={-45}\n                  textAnchor=\"end\"\n                  height={70}\n                  className=\"text-xs fill-gray-600 dark:fill-gray-400\"\n                />\n                <YAxis className=\"text-xs fill-gray-600 dark:fill-gray-400\" />\n                <Tooltip\n                  contentStyle={{\n                    backgroundColor: 'rgba(255, 255, 255, 0.95)',\n                    border: '1px solid #e5e7eb',\n                    borderRadius: '8px',\n                    boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)'\n                  }}\n                />\n                <Legend />\n                <Line \n                  type=\"monotone\"\n                  dataKey={dataType}\n                  name={getDataTypeLabel(dataType)}\n                  stroke={getDataTypeColor(dataType)}\n                  strokeWidth={2}\n                  dot={{ fill: getDataTypeColor(dataType), strokeWidth: 2, r: 4 }}\n                />\n              </LineChart>\n            )}\n          </ResponsiveContainer>\n        </div>\n      </div>\n      \n      {/* Summary Statistics */}\n      <div className=\"p-6 border-t border-gray-200 dark:border-gray-700\">\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">요약 통계</h3>\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n          <div className=\"bg-blue-50 dark:bg-blue-900/20 rounded-lg p-4\">\n            <div className=\"flex items-center gap-2 mb-2\">\n              <BarChart3 className=\"w-5 h-5 text-blue-500\" />\n              <span className=\"text-sm font-medium text-blue-700 dark:text-blue-300\">총 타자수</span>\n            </div>\n            <span className=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">\n              {logs.reduce((sum, log) => sum + (log.keyCount || 0), 0).toLocaleString()}\n            </span>\n          </div>\n          \n          <div className=\"bg-green-50 dark:bg-green-900/20 rounded-lg p-4\">\n            <div className=\"flex items-center gap-2 mb-2\">\n              <Clock className=\"w-5 h-5 text-green-500\" />\n              <span className=\"text-sm font-medium text-green-700 dark:text-green-300\">총 시간</span>\n            </div>\n            <span className=\"text-2xl font-bold text-green-600 dark:text-green-400\">\n              {formatTime(logs.reduce((sum, log) => sum + (log.typingTime || 0), 0))}\n            </span>\n          </div>\n          \n          <div className=\"bg-yellow-50 dark:bg-yellow-900/20 rounded-lg p-4\">\n            <div className=\"flex items-center gap-2 mb-2\">\n              <FileText className=\"w-5 h-5 text-yellow-500\" />\n              <span className=\"text-sm font-medium text-yellow-700 dark:text-yellow-300\">총 문자수</span>\n            </div>\n            <span className=\"text-2xl font-bold text-yellow-600 dark:text-yellow-400\">\n              {logs.reduce((sum, log) => sum + (log.totalChars || 0), 0).toLocaleString()}\n            </span>\n          </div>\n          \n          <div className=\"bg-purple-50 dark:bg-purple-900/20 rounded-lg p-4\">\n            <div className=\"flex items-center gap-2 mb-2\">\n              <Activity className=\"w-5 h-5 text-purple-500\" />\n              <span className=\"text-sm font-medium text-purple-700 dark:text-purple-300\">기록 수</span>\n            </div>\n            <span className=\"text-2xl font-bold text-purple-600 dark:text-purple-400\">\n              {logs.length.toLocaleString()}\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// 시간 형식화 함수\nfunction formatTime(seconds: number): string {\n  if (seconds < 60) return `${seconds}초`;\n  \n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = seconds % 60;\n  \n  if (minutes < 60) {\n    return `${minutes}분 ${remainingSeconds}초`;\n  }\n  \n  const hours = Math.floor(minutes / 60);\n  const remainingMinutes = minutes % 60;\n  \n  return `${hours}시간 ${remainingMinutes}분 ${remainingSeconds}초`;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1187, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop_6/src/app/components/ui/memory-monitor.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { MemoryStick, Cpu, HardDrive, Zap, RefreshCw, AlertTriangle } from 'lucide-react'\n\ninterface MemoryInfo {\n  total: number\n  used: number\n  free: number\n  percentage: number\n}\n\ninterface MemoryData {\n  main: MemoryInfo\n  renderer: MemoryInfo\n  gpu?: MemoryInfo\n  system: MemoryInfo\n  application?: MemoryInfo // 애플리케이션 총 사용량 추가\n  timestamp: number\n}\n\ninterface MemoryMonitorProps {\n  className?: string\n  autoRefresh?: boolean\n  refreshInterval?: number\n}\n\nexport const MemoryMonitor: React.FC<MemoryMonitorProps> = ({ \n  className = '',\n  autoRefresh = true,\n  refreshInterval = 2000\n}) => {\n  const [memoryData, setMemoryData] = useState<MemoryData | null>(null)\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [history, setHistory] = useState<MemoryData[]>([])\n  const [isGCRunning, setIsGCRunning] = useState(false)\n\n  // 메모리 정보 가져오기\n  const fetchMemoryInfo = useCallback(async () => {\n    try {\n      setIsLoading(true)\n      setError(null)\n      \n      if (typeof window !== 'undefined' && window.electronAPI) {\n        const response = await window.electronAPI.memory.getInfo()\n        \n        if (response.success && response.data) {\n          const newData: MemoryData = {\n            ...response.data,\n            timestamp: Date.now()\n          }\n          \n          setMemoryData(newData)\n          setHistory(prev => {\n            const updated = [...prev, newData]\n            // 최근 60개 데이터만 유지 (2분간 데이터)\n            return updated.slice(-60)\n          })\n        } else {\n          setError(response.error || '메모리 정보를 가져올 수 없습니다')\n        }\n      }\n    } catch (err) {\n      console.error('메모리 정보 가져오기 실패:', err)\n      setError(err instanceof Error ? err.message : '알 수 없는 오류')\n    } finally {\n      setIsLoading(false)\n    }\n  }, [])\n\n  // 가비지 컬렉션 실행\n  const runGarbageCollection = useCallback(async () => {\n    try {\n      setIsGCRunning(true)\n      \n      if (typeof window !== 'undefined' && window.electronAPI) {\n        const response = await window.electronAPI.memory.cleanup()\n        \n        if (response.success) {\n          // GC 후 메모리 정보 새로고침\n          setTimeout(fetchMemoryInfo, 1000)\n        } else {\n          setError(response.error || 'GC 실행 실패')\n        }\n      }\n    } catch (err) {\n      console.error('GC 실행 실패:', err)\n      setError(err instanceof Error ? err.message : 'GC 실행 중 오류')\n    } finally {\n      setIsGCRunning(false)\n    }\n  }, [fetchMemoryInfo])\n\n  // 메모리 최적화\n  const optimizeMemory = useCallback(async () => {\n    try {\n      if (typeof window !== 'undefined' && window.electronAPI) {\n        const response = await window.electronAPI.memory.optimize()\n        \n        if (response.success) {\n          setTimeout(fetchMemoryInfo, 1000)\n        } else {\n          setError(response.error || '메모리 최적화 실패')\n        }\n      }\n    } catch (err) {\n      console.error('메모리 최적화 실패:', err)\n      setError(err instanceof Error ? err.message : '메모리 최적화 중 오류')\n    }\n  }, [fetchMemoryInfo])\n\n  // 자동 새로고침 설정\n  useEffect(() => {\n    fetchMemoryInfo() // 초기 로드\n    \n    if (autoRefresh) {\n      const interval = setInterval(fetchMemoryInfo, refreshInterval)\n      return () => clearInterval(interval)\n    }\n  }, [fetchMemoryInfo, autoRefresh, refreshInterval])\n\n  // 메모리 사용량에 따른 색상 결정\n  const getUsageColor = (percentage: number) => {\n    if (percentage >= 85) return 'text-red-500'\n    if (percentage >= 70) return 'text-yellow-500'\n    return 'text-green-500'\n  }\n\n  const getProgressBarColor = (percentage: number) => {\n    if (percentage >= 85) return 'bg-red-500'\n    if (percentage >= 70) return 'bg-yellow-500'\n    return 'bg-green-500'\n  }\n\n  // 메모리 크기 포맷팅 (이미 MB 단위로 입력받음)\n  const formatMemorySize = (megabytes: number) => {\n    if (megabytes >= 1024) {\n      return `${(megabytes / 1024).toFixed(1)} GB`\n    }\n    return `${megabytes.toFixed(1)} MB`\n  }\n\n  // 메모리 정보 카드 컴포넌트\n  const MemoryCard: React.FC<{\n    title: string\n    icon: React.ReactNode\n    info: MemoryInfo\n  }> = ({ title, icon, info }) => (\n    <div className=\"bg-gray-50 rounded-lg p-4\">\n      <div className=\"flex items-center gap-2 mb-3\">\n        {icon}\n        <h4 className=\"font-medium text-gray-900\">{title}</h4>\n      </div>\n      \n      <div className=\"space-y-2\">\n        <div className=\"flex justify-between text-sm\">\n          <span className=\"text-gray-600\">사용됨</span>\n          <span className={`font-medium ${getUsageColor(info.percentage)}`}>\n            {formatMemorySize(info.used)} ({info.percentage.toFixed(1)}%)\n          </span>\n        </div>\n        \n        <div className=\"w-full bg-gray-200 rounded-full h-2\">\n          <div \n            className={`h-2 rounded-full transition-all duration-300 ${getProgressBarColor(info.percentage)}`}\n            style={{ width: `${Math.min(info.percentage, 100)}%` }}\n          />\n        </div>\n        \n        <div className=\"flex justify-between text-xs text-gray-500\">\n          <span>여유: {formatMemorySize(info.free)}</span>\n          <span>전체: {formatMemorySize(info.total)}</span>\n        </div>\n      </div>\n    </div>\n  )\n\n  return (\n    <div className={`bg-white rounded-lg border border-gray-200 p-6 ${className}`}>\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center gap-2\">\n          <MemoryStick className=\"w-5 h-5 text-blue-500\" />\n          <h3 className=\"text-lg font-semibold text-gray-900\">메모리 모니터</h3>\n          {isLoading && (\n            <div className=\"animate-spin rounded-full h-4 w-4 border-2 border-blue-500 border-t-transparent\"></div>\n          )}\n        </div>\n        \n        <div className=\"flex items-center gap-2\">\n          <button\n            onClick={fetchMemoryInfo}\n            disabled={isLoading}\n            className=\"p-2 text-gray-500 hover:text-gray-700 hover:bg-gray-100 rounded transition-colors\"\n            title=\"새로고침\"\n          >\n            <RefreshCw className={`w-4 h-4 ${isLoading ? 'animate-spin' : ''}`} />\n          </button>\n          \n          <button\n            onClick={runGarbageCollection}\n            disabled={isGCRunning}\n            className=\"px-3 py-1 text-sm bg-blue-500 text-white rounded hover:bg-blue-600 disabled:opacity-50 transition-colors\"\n            title=\"가비지 컬렉션 실행\"\n          >\n            {isGCRunning ? '실행 중...' : 'GC'}\n          </button>\n          \n          <button\n            onClick={optimizeMemory}\n            disabled={isLoading}\n            className=\"px-3 py-1 text-sm bg-green-500 text-white rounded hover:bg-green-600 disabled:opacity-50 transition-colors\"\n            title=\"메모리 최적화\"\n          >\n            <Zap className=\"w-3 h-3\" />\n          </button>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-lg flex items-center gap-2\">\n          <AlertTriangle className=\"w-4 h-4 text-red-500\" />\n          <span className=\"text-sm text-red-700\">{error}</span>\n        </div>\n      )}\n\n      {memoryData ? (\n        <div className=\"space-y-4\">\n          {/* 애플리케이션 총 사용량 요약 (맨 위에 표시) */}\n          {memoryData.application && (\n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n              <div className=\"flex items-center gap-2 mb-3\">\n                <Zap className=\"w-5 h-5 text-blue-600\" />\n                <h4 className=\"font-semibold text-blue-900\">애플리케이션 총 메모리 사용량</h4>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm text-blue-700\">\n                  {formatMemorySize(memoryData.application.used)} / {formatMemorySize(memoryData.application.total)}\n                </span>\n                <span className={`text-lg font-bold ${getUsageColor(memoryData.application.percentage)}`}>\n                  {memoryData.application.percentage.toFixed(1)}%\n                </span>\n              </div>\n              <div className=\"w-full bg-blue-200 rounded-full h-3 mt-2\">\n                <div \n                  className={`h-3 rounded-full transition-all duration-300 ${getProgressBarColor(memoryData.application.percentage)}`}\n                  style={{ width: `${Math.min(memoryData.application.percentage, 100)}%` }}\n                />\n              </div>\n            </div>\n          )}\n\n          {/* 메모리 정보 카드들 */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <MemoryCard\n              title=\"메인 프로세스\"\n              icon={<Cpu className=\"w-4 h-4 text-blue-500\" />}\n              info={memoryData.main}\n            />\n            \n            <MemoryCard\n              title=\"렌더러 프로세스\"\n              icon={<MemoryStick className=\"w-4 h-4 text-green-500\" />}\n              info={memoryData.renderer}\n            />\n            \n            {memoryData.gpu && (\n              <MemoryCard\n                title=\"GPU 메모리\"\n                icon={<Zap className=\"w-4 h-4 text-purple-500\" />}\n                info={memoryData.gpu}\n              />\n            )}\n            \n            <MemoryCard\n              title=\"시스템 메모리\"\n              icon={<HardDrive className=\"w-4 h-4 text-orange-500\" />}\n              info={memoryData.system}\n            />\n          </div>\n\n          {/* 상세 메모리 사용량 정보 */}\n          <div className=\"bg-gray-50 rounded-lg p-4\">\n            <h4 className=\"font-medium text-gray-900 mb-3\">메모리 사용량 상세</h4>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">메인 프로세스</span>\n                  <span className=\"font-medium\">\n                    {formatMemorySize(memoryData.main.used)} / {formatMemorySize(memoryData.main.total)}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">렌더러 프로세스</span>\n                  <span className=\"font-medium\">\n                    {formatMemorySize(memoryData.renderer.used)} / {formatMemorySize(memoryData.renderer.total)}\n                  </span>\n                </div>\n                {memoryData.application && (\n                  <div className=\"flex justify-between font-semibold text-blue-700 border-t pt-2\">\n                    <span>애플리케이션 합계</span>\n                    <span>\n                      {formatMemorySize(memoryData.application.used)} / {formatMemorySize(memoryData.application.total)}\n                    </span>\n                  </div>\n                )}\n              </div>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">시스템 총 메모리</span>\n                  <span className=\"font-medium\">\n                    {formatMemorySize(memoryData.system.total)}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">시스템 사용 중</span>\n                  <span className=\"font-medium\">\n                    {formatMemorySize(memoryData.system.used)}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">시스템 여유</span>\n                  <span className=\"font-medium text-green-600\">\n                    {formatMemorySize(memoryData.system.free)}\n                  </span>\n                </div>\n                {memoryData.gpu && (\n                  <div className=\"flex justify-between border-t pt-2\">\n                    <span className=\"text-gray-600\">GPU 메모리</span>\n                    <span className=\"font-medium\">\n                      {formatMemorySize(memoryData.gpu.used)} / {formatMemorySize(memoryData.gpu.total)}\n                    </span>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* 메모리 사용량 경고 */}\n          {(memoryData.application && memoryData.application.percentage > 85) || memoryData.system.percentage > 90 ? (\n            <div className=\"bg-red-50 border border-red-200 rounded-lg p-3\">\n              <div className=\"flex items-center gap-2\">\n                <AlertTriangle className=\"w-4 h-4 text-red-600\" />\n                <span className=\"text-sm font-medium text-red-800\">높은 메모리 사용량 경고</span>\n              </div>\n              <p className=\"text-sm text-red-700 mt-1\">\n                {memoryData.application && memoryData.application.percentage > 85 && \n                  \"애플리케이션 메모리 사용량이 높습니다. \"}\n                {memoryData.system.percentage > 90 && \n                  \"시스템 메모리 사용량이 높습니다. \"}\n                성능 저하를 방지하기 위해 메모리 최적화를 실행하거나 불필요한 프로그램을 종료하는 것을 권장합니다.\n              </p>\n            </div>\n          ) : (memoryData.application && memoryData.application.percentage > 70) || memoryData.system.percentage > 80 ? (\n            <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-3\">\n              <div className=\"flex items-center gap-2\">\n                <AlertTriangle className=\"w-4 h-4 text-yellow-600\" />\n                <span className=\"text-sm font-medium text-yellow-800\">메모리 사용량 주의</span>\n              </div>\n              <p className=\"text-sm text-yellow-700 mt-1\">\n                메모리 사용량이 증가하고 있습니다. 메모리 정리를 실행하여 성능을 개선할 수 있습니다.\n              </p>\n            </div>\n          ) : null}\n        </div>\n      ) : (\n        <div className=\"text-center py-8 text-gray-500\">\n          <MemoryStick className=\"w-12 h-12 mx-auto mb-3 text-gray-300\" />\n          <p>메모리 정보를 불러오는 중...</p>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default MemoryMonitor\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2081, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop_6/src/app/components/ui/typing-analyzer.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useCallback } from 'react';\n\ninterface TypingData {\n  keyCount: number;\n  typingTime: number;\n  accuracy?: number;\n}\n\ninterface TypingAnalysisResult {\n  wpm: number;\n  accuracy: number;\n  performanceIndex: number;\n  consistencyScore: number;\n  fatigueAnalysis: {\n    score: number;\n    timeFactor: number;\n    intensityFactor: number;\n    recommendation: string;\n  };\n}\n\ninterface TypingAnalyzerProps {\n  stats?: TypingData;\n  isTracking?: boolean;\n  className?: string;\n}\n\n// JavaScript로 타이핑 통계 분석 (폴백)\nfunction analyzeTypingWithJS(data: TypingData): TypingAnalysisResult {\n  const { keyCount, typingTime, accuracy = 100 } = data;\n  \n  // WPM 계산 (1단어 = 5타)\n  const minutes = typingTime / 60000;\n  const wpm = minutes > 0 ? (keyCount / 5) / minutes : 0;\n  \n  // 일관성 점수 (간단한 추정)\n  const consistency = Math.min(100, 65 + (Math.min(keyCount, 500) / 20));\n  \n  // 피로도 계산\n  const fatigue = {\n    score: Math.min(100, (minutes * 10) + (wpm / 10)),\n    timeFactor: minutes,\n    intensityFactor: wpm / 100,\n    recommendation: minutes > 30 \n      ? '휴식이 필요합니다' \n      : minutes > 15 \n        ? '짧은 휴식을 고려하세요' \n        : '좋은 상태입니다'\n  };\n  \n  return {\n    wpm: Math.max(0, wpm),\n    accuracy: Math.min(100, Math.max(0, accuracy)),\n    performanceIndex: Math.max(0, wpm * accuracy / 100),\n    consistencyScore: consistency,\n    fatigueAnalysis: fatigue\n  };\n}\n\nexport function TypingAnalyzer({ stats, isTracking, className }: TypingAnalyzerProps) {\n  const defaultStats = {\n    keyCount: 0,\n    typingTime: 0,\n    accuracy: 100\n  };\n\n  const safeStats = stats || defaultStats;\n  const [result, setResult] = useState<TypingAnalysisResult | null>(null);\n  const [useGpuAcceleration, setUseGpuAcceleration] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [gpuAvailable, setGpuAvailable] = useState<boolean>(false);\n\n  // GPU 상태 확인\n  const checkGpuStatus = useCallback(async () => {\n    try {\n      setGpuAvailable(false); // GPU는 현재 사용 불가로 설정\n    } catch (err) {\n      console.warn('GPU 상태 확인 실패:', err);\n      setGpuAvailable(false);\n    }\n  }, []);\n\n  // GPU로 타이핑 분석 수행\n  const computeWithGpu = useCallback(async (data: TypingData): Promise<TypingAnalysisResult | null> => {\n    try {\n      // GPU 기능은 현재 비활성화\n      return null;\n    } catch (err) {\n      console.error('GPU 계산 실패:', err);\n    }\n    return null;\n  }, []);\n\n  // 타이핑 통계 분석 수행\n  const analyzeTyping = useCallback(async () => {\n    if (!safeStats.keyCount || !safeStats.typingTime) {\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      if (useGpuAcceleration && gpuAvailable) {\n        // GPU 가속 분석\n        const gpuResult = await computeWithGpu(safeStats);\n        \n        if (gpuResult) {\n          setResult(gpuResult);\n        } else {\n          // GPU 실패 시 JavaScript 폴백\n          const jsResult = analyzeTypingWithJS(safeStats);\n          setResult(jsResult);\n        }\n      } else {\n        // JavaScript로 분석 (폴백)\n        const jsResult = analyzeTypingWithJS(safeStats);\n        setResult(jsResult);\n      }\n    } catch (err) {\n      console.error('타이핑 분석 오류:', err);\n      setError('분석 중 오류가 발생했습니다.');\n      \n      // 오류 시 JavaScript 폴백 사용\n      const jsResult = analyzeTypingWithJS(safeStats);\n      setResult(jsResult);\n    } finally {\n      setLoading(false);\n    }\n  }, [safeStats, useGpuAcceleration, gpuAvailable, computeWithGpu]);\n\n  // GPU 가속 활성화/비활성화 처리\n  const handleToggleGpu = useCallback(async () => {\n    const newState = !useGpuAcceleration;\n    setUseGpuAcceleration(newState);\n    \n    if (newState && gpuAvailable) {\n      try {\n        // GPU 기능은 현재 비활성화\n        setUseGpuAcceleration(false);\n      } catch (err) {\n        console.error('GPU 활성화 실패:', err);\n        setUseGpuAcceleration(false);\n      }\n    }\n  }, [useGpuAcceleration, gpuAvailable]);\n\n  // 컴포넌트 마운트 시 GPU 상태 확인\n  useEffect(() => {\n    checkGpuStatus();\n  }, [checkGpuStatus]);\n\n  // 데이터 변경 시 재분석\n  useEffect(() => {\n    if (safeStats.keyCount > 0 && safeStats.typingTime > 0) {\n      analyzeTyping();\n    }\n  }, [safeStats, analyzeTyping]);\n\n  return (\n    <div className={`bg-white rounded-lg shadow-sm border p-6 ${className || ''}`}>\n      <div className=\"flex items-center justify-between mb-4\">\n        <h2 className=\"text-lg font-semibold text-gray-900\">타이핑 분석</h2>\n        {gpuAvailable && (\n          <div className=\"flex items-center space-x-2\">\n            <label className=\"flex items-center space-x-2 text-sm\">\n              <input\n                type=\"checkbox\"\n                checked={useGpuAcceleration}\n                onChange={handleToggleGpu}\n                disabled={loading}\n                className=\"rounded border-gray-300\"\n              />\n              <span>GPU 가속</span>\n            </label>\n          </div>\n        )}\n      </div>\n\n      {loading && (\n        <div className=\"text-center py-4\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mx-auto\"></div>\n          <p className=\"text-sm text-gray-600 mt-2\">분석 중...</p>\n        </div>\n      )}\n      \n      {error && (\n        <div className=\"bg-red-50 border border-red-200 rounded-md p-3 mb-4\">\n          <p className=\"text-red-700 text-sm\">{error}</p>\n        </div>\n      )}\n      \n      {result && !loading && (\n        <div className=\"space-y-4\">\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"bg-blue-50 rounded-lg p-3\">\n              <div className=\"text-sm text-gray-600\">속도</div>\n              <div className=\"text-2xl font-bold text-blue-600\">{Math.round(result.wpm)} WPM</div>\n            </div>\n            \n            <div className=\"bg-green-50 rounded-lg p-3\">\n              <div className=\"text-sm text-gray-600\">정확도</div>\n              <div className=\"text-2xl font-bold text-green-600\">{result.accuracy.toFixed(1)}%</div>\n            </div>\n            \n            <div className=\"bg-purple-50 rounded-lg p-3\">\n              <div className=\"text-sm text-gray-600\">성능 지수</div>\n              <div className=\"text-2xl font-bold text-purple-600\">{result.performanceIndex.toFixed(1)}</div>\n            </div>\n            \n            <div className=\"bg-orange-50 rounded-lg p-3\">\n              <div className=\"text-sm text-gray-600\">일관성</div>\n              <div className=\"text-2xl font-bold text-orange-600\">{result.consistencyScore.toFixed(1)}</div>\n            </div>\n          </div>\n          \n          <div className=\"bg-gray-50 rounded-lg p-4\">\n            <h3 className=\"font-semibold text-gray-800 mb-2\">피로도 분석</h3>\n            <div className=\"w-full bg-gray-200 rounded-full h-2 mb-2\">\n              <div \n                className={`h-2 rounded-full ${\n                  result.fatigueAnalysis.score < 30 ? 'bg-green-500' :\n                  result.fatigueAnalysis.score < 70 ? 'bg-yellow-500' : 'bg-red-500'\n                }`}\n                style={{ width: `${Math.min(100, result.fatigueAnalysis.score)}%` }}\n              />\n            </div>\n            <p className=\"text-sm text-gray-600\">\n              {result.fatigueAnalysis.recommendation}\n            </p>\n          </div>\n        </div>\n      )}\n      \n      {!result && !loading && !error && (\n        <div className=\"text-center py-8 text-gray-500\">\n          <p>타이핑을 시작하면 분석 결과가 표시됩니다.</p>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2520, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop_6/src/app/components/ui/card.tsx"],"sourcesContent":["import React from 'react';\n\ninterface CardProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\ninterface CardHeaderProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\ninterface CardContentProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\ninterface CardTitleProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const Card: React.FC<CardProps> = ({ children, className = '' }) => {\n  return (\n    <div className={`bg-white rounded-lg shadow-sm border border-gray-200 ${className}`}>\n      {children}\n    </div>\n  );\n};\n\nexport const CardHeader: React.FC<CardHeaderProps> = ({ children, className = '' }) => {\n  return (\n    <div className={`px-6 py-4 border-b border-gray-200 ${className}`}>\n      {children}\n    </div>\n  );\n};\n\nexport const CardContent: React.FC<CardContentProps> = ({ children, className = '' }) => {\n  return (\n    <div className={`px-6 py-4 ${className}`}>\n      {children}\n    </div>\n  );\n};\n\nexport const CardTitle: React.FC<CardTitleProps> = ({ children, className = '' }) => {\n  return (\n    <h3 className={`text-lg font-semibold text-gray-900 ${className}`}>\n      {children}\n    </h3>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;AAsBO,MAAM,OAA4B,CAAC,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE;IACpE,qBACE,6LAAC;QAAI,WAAW,CAAC,qDAAqD,EAAE,WAAW;kBAChF;;;;;;AAGP;KANa;AAQN,MAAM,aAAwC,CAAC,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE;IAChF,qBACE,6LAAC;QAAI,WAAW,CAAC,mCAAmC,EAAE,WAAW;kBAC9D;;;;;;AAGP;MANa;AAQN,MAAM,cAA0C,CAAC,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE;IAClF,qBACE,6LAAC;QAAI,WAAW,CAAC,UAAU,EAAE,WAAW;kBACrC;;;;;;AAGP;MANa;AAQN,MAAM,YAAsC,CAAC,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE;IAC9E,qBACE,6LAAC;QAAG,WAAW,CAAC,oCAAoC,EAAE,WAAW;kBAC9D;;;;;;AAGP;MANa","debugId":null}},
    {"offset": {"line": 2586, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop_6/src/lib/utils.ts"],"sourcesContent":["// Simple utility to merge class names\nexport function cn(...inputs: (string | undefined)[]) {\n  return inputs.filter(Boolean).join(' ')\n}\n"],"names":[],"mappings":"AAAA,sCAAsC;;;;AAC/B,SAAS,GAAG,GAAG,MAA8B;IAClD,OAAO,OAAO,MAAM,CAAC,SAAS,IAAI,CAAC;AACrC","debugId":null}},
    {"offset": {"line": 2602, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop_6/src/app/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = {\n  default: \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n  secondary: \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n  destructive: \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n  outline: \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 text-foreground\",\n  success: \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent bg-green-500 text-white hover:bg-green-600\",\n  warning: \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent bg-yellow-500 text-white hover:bg-yellow-600\",\n  error: \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent bg-red-500 text-white hover:bg-red-600\",\n}\n\nexport interface BadgeProps extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: keyof typeof badgeVariants\n}\n\nfunction Badge({ className, variant = \"default\", ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants[variant], className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;;;AAEA,MAAM,gBAAgB;IACpB,SAAS;IACT,WAAW;IACX,aAAa;IACb,SAAS;IACT,SAAS;IACT,SAAS;IACT,OAAO;AACT;AAMA,SAAS,MAAM,EAAE,SAAS,EAAE,UAAU,SAAS,EAAE,GAAG,OAAmB;IACrE,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,aAAa,CAAC,QAAQ,EAAE;QAAa,GAAG,KAAK;;;;;;AAEpE;KAJS","debugId":null}},
    {"offset": {"line": 2642, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop_6/src/app/components/ui/native-module-status.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from './card';\nimport { Badge } from './badge';\nimport { CheckCircle, XCircle, AlertCircle, Cpu, Activity, Settings } from 'lucide-react';\n\ninterface NativeModuleInfo {\n  uiohook: {\n    available: boolean;\n    version: string;\n    initialized: boolean;\n    loadError?: string | null;\n    fallbackMode?: boolean;\n    features?: {\n      keyboardHook: boolean;\n      mouseHook: boolean;\n      globalEvents: boolean;\n    };\n  };\n  system: {\n    platform: string;\n    arch: string;\n    node: string;\n    electron?: string;\n    chrome?: string;\n    hostname?: string;\n    uptime?: number;\n    cpuCount?: number;\n    cpuModel?: string;\n    loadAverage?: {\n      '1min': number;\n      '5min': number;\n      '15min': number;\n    };\n    memory?: {\n      total: number;\n      free: number;\n      used: number;\n      percentage: number;\n    };\n  };\n  permissions: {\n    accessibility: boolean;\n    input: boolean;\n    screenRecording?: boolean | null;\n    microphone?: boolean | null;\n    camera?: boolean | null;\n  };\n  performance?: {\n    processUptime: number;\n    memoryUsage: NodeJS.MemoryUsage;\n    resourceUsage?: NodeJS.ResourceUsage | null;\n    pid: number;\n    ppid?: number | null;\n  };\n  environment?: {\n    nodeEnv: string;\n    isDev: boolean;\n    userAgent: string;\n    workingDirectory: string;\n  };\n}\n\nexport default function NativeModuleStatus() {\n  const [moduleInfo, setModuleInfo] = useState<NativeModuleInfo | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const setBrowserFallback = () => {\n    setModuleInfo({\n      uiohook: {\n        available: false,\n        version: '브라우저 환경',\n        initialized: false,\n        loadError: '브라우저 환경에서는 네이티브 모듈을 사용할 수 없습니다',\n        fallbackMode: true,\n        features: {\n          keyboardHook: false,\n          mouseHook: false,\n          globalEvents: false\n        }\n      },\n      system: {\n        platform: navigator.platform,\n        arch: '브라우저',\n        node: '브라우저 환경',\n        electron: '브라우저 환경',\n        chrome: navigator.userAgent,\n        hostname: 'localhost',\n        uptime: 0,\n        cpuCount: navigator.hardwareConcurrency || 1,\n        cpuModel: '알 수 없음',\n        loadAverage: { '1min': 0, '5min': 0, '15min': 0 },\n        memory: { total: 0, free: 0, used: 0, percentage: 0 }\n      },\n      permissions: {\n        accessibility: false,\n        input: false,\n        screenRecording: null,\n        microphone: null,\n        camera: null\n      },\n      performance: {\n        processUptime: 0,\n        memoryUsage: { rss: 0, heapTotal: 0, heapUsed: 0, external: 0, arrayBuffers: 0 },\n        resourceUsage: null,\n        pid: 0,\n        ppid: null\n      },\n      environment: {\n        nodeEnv: 'browser',\n        isDev: false,\n        userAgent: navigator.userAgent,\n        workingDirectory: '브라우저 환경'\n      }\n    });\n  };\n\n  useEffect(() => {\n    const fetchStatus = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        \n        console.log('🔧 Native Module Status: 상태 조회 시작');\n        \n        // 더 세밀한 Electron API 확인\n        if (typeof window === 'undefined') {\n          console.warn('❌ Window 객체가 없음 - 서버 사이드 렌더링 중일 수 있음');\n          setBrowserFallback();\n          return;\n        }\n\n        // Electron API가 로드될 때까지 잠깐 대기 (최대 3초)\n        let electronAPI = window.electronAPI;\n        let waitAttempts = 0;\n        const maxWaitAttempts = 30; // 3초 (100ms * 30)\n        \n        while (!electronAPI && waitAttempts < maxWaitAttempts) {\n          console.log(`⏳ Electron API 로드 대기 중... (${waitAttempts + 1}/${maxWaitAttempts})`);\n          await new Promise(resolve => setTimeout(resolve, 100));\n          electronAPI = window.electronAPI;\n          waitAttempts++;\n        }\n\n        if (!electronAPI) {\n          console.warn('❌ window.electronAPI가 없음 - 브라우저 환경이거나 preload 스크립트 로드 실패');\n          setBrowserFallback();\n          return;\n        }\n\n        console.log('✅ Electron API 발견됨, 최상위 키들:', Object.keys(electronAPI));\n\n        // Native API 그룹 확인 (최상위 native 모듈 확인)\n        let nativeAPI: any = null;\n        let nativeAPIPath = '';\n        \n        if (electronAPI.native) {\n          nativeAPI = electronAPI.native;\n          nativeAPIPath = 'window.electronAPI.native';\n          console.log('✅ 최상위 Native API 발견됨');\n        } else if (electronAPI.system?.native) {\n          nativeAPI = electronAPI.system.native;\n          nativeAPIPath = 'window.electronAPI.system.native';\n          console.log('✅ System.Native API 발견됨');\n        } else {\n          console.warn('❌ Native API를 찾을 수 없음 - 최상위와 system 하위 모두 확인했지만 없음');\n          setBrowserFallback();\n          return;\n        }\n\n        console.log(`✅ Native API 사용 경로: ${nativeAPIPath}`);\n        console.log('✅ Native API 함수들:', Object.keys(nativeAPI));\n\n        // 안전한 함수 호출을 위한 헬퍼 함수\n        const safeCall = async (funcName: string, ...args: any[]) => {\n          try {\n            if (typeof nativeAPI[funcName] === 'function') {\n              return await nativeAPI[funcName](...args);\n            } else {\n              console.warn(`⚠️ ${funcName} 함수가 없음 - 타입:`, typeof nativeAPI[funcName]);\n              return null;\n            }\n          } catch (error) {\n            console.error(`❌ ${funcName} 호출 실패:`, error);\n            return null;\n          }\n        };\n\n        console.log('✅ 안전한 함수 호출 시스템 준비됨');\n        \n        // 네이티브 모듈 정보 조회\n        let nativeInfo = null;\n        try {\n          console.log('🔧 네이티브 모듈 정보 조회 중...');\n          \n          // 네이티브 모듈 사용 가능 여부\n          const availableResult = await safeCall('isNativeModuleAvailable');\n          console.log('🔍 네이티브 모듈 사용 가능 여부:', availableResult);\n          \n          // 네이티브 모듈 버전\n          const versionResult = await safeCall('getNativeModuleVersion');\n          console.log('📋 네이티브 모듈 버전:', versionResult);\n\n          // 네이티브 모듈 상세 정보\n          const infoResult = await safeCall('getNativeModuleInfo');\n          console.log('📄 네이티브 모듈 상세 정보:', infoResult);\n          \n          nativeInfo = {\n            available: availableResult?.success ? Boolean(availableResult.data) : false,\n            version: versionResult?.success ? String(versionResult.data || '알 수 없음') : '알 수 없음',\n            info: infoResult?.success ? infoResult.data : null,\n            errors: [\n              availableResult?.error,\n              versionResult?.error, \n              infoResult?.error\n            ].filter(Boolean)\n          };\n          \n        } catch (nativeError) {\n          console.error('❌ 네이티브 모듈 정보 조회 실패:', nativeError);\n          nativeInfo = {\n            available: false,\n            version: '오류',\n            info: null,\n            errors: [String(nativeError)]\n          };\n        }\n\n        // 시스템 정보 조회 - 더 안전하게\n        const systemInfo = {\n          platform: typeof navigator !== 'undefined' ? navigator.platform : '알 수 없음',\n          arch: '알 수 없음',\n          node: '알 수 없음',\n          electron: '알 수 없음',\n          chrome: typeof navigator !== 'undefined' ? navigator.userAgent : '알 수 없음',\n          hostname: 'localhost',\n          uptime: 0,\n          cpuCount: typeof navigator !== 'undefined' ? (navigator.hardwareConcurrency || 1) : 1,\n          cpuModel: '알 수 없음',\n          loadAverage: { '1min': 0, '5min': 0, '15min': 0 },\n          memory: { total: 0, free: 0, used: 0, percentage: 0 }\n        };\n\n        // 시스템 정보 API 호출 시도 (존재하는 경우만)\n        try {\n          if (electronAPI?.system?.getInfo && typeof electronAPI.system.getInfo === 'function') {\n            const sysInfoResult = await electronAPI.system.getInfo();\n            if (sysInfoResult?.success && sysInfoResult.data) {\n              console.log('✅ 시스템 정보 조회 성공:', sysInfoResult.data);\n              Object.assign(systemInfo, sysInfoResult.data);\n            }\n          }\n        } catch (sysError) {\n          console.warn('⚠️ 시스템 정보 조회 실패:', sysError);\n        }\n\n        // 권한 정보 (기본값)\n        const permissionInfo = {\n          accessibility: false,\n          input: false,\n          screenRecording: null,\n          microphone: null,\n          camera: null\n        };\n\n        // 종합 데이터 구성\n        const moduleData: NativeModuleInfo = {\n          uiohook: {\n            available: nativeInfo?.available || false,\n            version: nativeInfo?.version || '알 수 없음',\n            initialized: nativeInfo?.available || false,\n            loadError: nativeInfo?.errors?.join(', ') || null,\n            fallbackMode: !nativeInfo?.available,\n            features: {\n              keyboardHook: nativeInfo?.available || false,\n              mouseHook: nativeInfo?.available || false,\n              globalEvents: nativeInfo?.available || false\n            }\n          },\n          system: systemInfo,\n          permissions: permissionInfo,\n          performance: {\n            processUptime: 0,\n            memoryUsage: { rss: 0, heapTotal: 0, heapUsed: 0, external: 0, arrayBuffers: 0 },\n            resourceUsage: null,\n            pid: 0,\n            ppid: null\n          },\n          environment: {\n            nodeEnv: 'unknown',\n            isDev: false,\n            userAgent: typeof navigator !== 'undefined' ? navigator.userAgent : '알 수 없음',\n            workingDirectory: '알 수 없음'\n          }\n        };\n\n        console.log('✅ 최종 모듈 정보:', moduleData);\n        setModuleInfo(moduleData);\n        \n      } catch (err) {\n        console.error('❌ 네이티브 모듈 상태 확인 오류:', err);\n        setError(err instanceof Error ? err.message : '알 수 없는 오류');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchStatus();\n    \n    // 주기적으로 상태 업데이트 (10초마다)\n    const interval = setInterval(fetchStatus, 10000);\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  const getStatusIcon = (available: boolean) => {\n    return available ? (\n      <CheckCircle className=\"h-4 w-4 text-green-500\" />\n    ) : (\n      <XCircle className=\"h-4 w-4 text-red-500\" />\n    );\n  };\n\n  const getStatusBadge = (available: boolean, label: string) => {\n    return (\n      <Badge variant={available ? \"default\" : \"destructive\"}>\n        {available ? label : `${label} 비활성`}\n      </Badge>\n    );\n  };\n\n  if (loading) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Activity className=\"h-5 w-5 animate-spin\" />\n            네이티브 모듈 상태\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-center py-4\">\n            <div className=\"text-sm text-muted-foreground\">상태 확인 중...</div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (error) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <AlertCircle className=\"h-5 w-5 text-red-500\" />\n            네이티브 모듈 상태\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-center py-4\">\n            <div className=\"text-sm text-red-600\">{error}</div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (!moduleInfo) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <XCircle className=\"h-5 w-5 text-gray-500\" />\n            네이티브 모듈 상태\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-center py-4\">\n            <div className=\"text-sm text-muted-foreground\">\n              네이티브 모듈 정보를 가져올 수 없습니다\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Cpu className=\"h-5 w-5\" />\n          네이티브 모듈 상태\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {/* uiohook 상태 */}\n        <div className=\"space-y-2\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-sm font-medium\">uiohook (키보드 후킹)</span>\n            {getStatusIcon(moduleInfo?.uiohook?.available || false)}\n          </div>\n          <div className=\"pl-4 space-y-1\">\n            <div className=\"flex items-center justify-between text-xs\">\n              <span>버전:</span>\n              <span className=\"text-muted-foreground\">{moduleInfo?.uiohook?.version || 'N/A'}</span>\n            </div>\n            <div className=\"flex items-center justify-between text-xs\">\n              <span>초기화:</span>\n              {getStatusBadge(moduleInfo?.uiohook?.initialized || false, '완료')}\n            </div>\n            {moduleInfo?.uiohook?.fallbackMode && (\n              <div className=\"flex items-center justify-between text-xs\">\n                <span>폴백 모드:</span>\n                <Badge variant=\"secondary\">활성</Badge>\n              </div>\n            )}\n            {moduleInfo?.uiohook?.loadError && (\n              <div className=\"text-xs text-red-500 mt-1\">\n                오류: {moduleInfo.uiohook.loadError}\n              </div>\n            )}\n            {moduleInfo?.uiohook?.features && (\n              <div className=\"space-y-1 mt-2\">\n                <div className=\"text-xs font-medium\">기능:</div>\n                <div className=\"flex items-center justify-between text-xs\">\n                  <span>키보드 후킹:</span>\n                  {getStatusBadge(moduleInfo.uiohook.features?.keyboardHook || false, '지원')}\n                </div>\n                <div className=\"flex items-center justify-between text-xs\">\n                  <span>마우스 후킹:</span>\n                  {getStatusBadge(moduleInfo.uiohook.features?.mouseHook || false, '지원')}\n                </div>\n                <div className=\"flex items-center justify-between text-xs\">\n                  <span>글로벌 이벤트:</span>\n                  {getStatusBadge(moduleInfo.uiohook.features?.globalEvents || false, '지원')}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* 시스템 정보 */}\n        <div className=\"space-y-2\">\n          <div className=\"flex items-center gap-2\">\n            <Settings className=\"h-4 w-4\" />\n            <span className=\"text-sm font-medium\">시스템 정보</span>\n          </div>\n          <div className=\"pl-4 space-y-1\">\n            <div className=\"flex items-center justify-between text-xs\">\n              <span>플랫폼:</span>\n              <span className=\"text-muted-foreground\">{moduleInfo?.system?.platform || 'N/A'}</span>\n            </div>\n            <div className=\"flex items-center justify-between text-xs\">\n              <span>아키텍처:</span>\n              <span className=\"text-muted-foreground\">{moduleInfo?.system?.arch || 'N/A'}</span>\n            </div>\n            <div className=\"flex items-center justify-between text-xs\">\n              <span>Node.js:</span>\n              <span className=\"text-muted-foreground\">{moduleInfo?.system?.node || 'N/A'}</span>\n            </div>\n            {moduleInfo?.system?.electron && (\n              <div className=\"flex items-center justify-between text-xs\">\n                <span>Electron:</span>\n                <span className=\"text-muted-foreground\">{moduleInfo.system.electron}</span>\n              </div>\n            )}\n            {moduleInfo?.system?.cpuCount && (\n              <div className=\"flex items-center justify-between text-xs\">\n                <span>CPU 코어:</span>\n                <span className=\"text-muted-foreground\">{moduleInfo.system.cpuCount}개</span>\n              </div>\n            )}\n            {moduleInfo?.system?.memory && (\n              <div className=\"flex items-center justify-between text-xs\">\n                <span>시스템 메모리:</span>\n                <span className=\"text-muted-foreground\">\n                  {Math.round(moduleInfo.system.memory.percentage)}% 사용 중\n                </span>\n              </div>\n            )}\n            {moduleInfo?.system?.uptime && (\n              <div className=\"flex items-center justify-between text-xs\">\n                <span>가동 시간:</span>\n                <span className=\"text-muted-foreground\">\n                  {Math.floor(moduleInfo.system.uptime / 3600)}시간\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* 성능 정보 */}\n        {moduleInfo?.performance && (\n          <div className=\"space-y-2\">\n            <div className=\"flex items-center gap-2\">\n              <Activity className=\"h-4 w-4\" />\n              <span className=\"text-sm font-medium\">성능 정보</span>\n            </div>\n            <div className=\"pl-4 space-y-1\">\n              <div className=\"flex items-center justify-between text-xs\">\n                <span>프로세스 ID:</span>\n                <span className=\"text-muted-foreground\">{moduleInfo.performance.pid}</span>\n              </div>\n              <div className=\"flex items-center justify-between text-xs\">\n                <span>힙 메모리:</span>\n                <span className=\"text-muted-foreground\">\n                  {Math.round(moduleInfo.performance.memoryUsage.heapUsed / 1024 / 1024)}MB\n                </span>\n              </div>\n              <div className=\"flex items-center justify-between text-xs\">\n                <span>RSS 메모리:</span>\n                <span className=\"text-muted-foreground\">\n                  {Math.round(moduleInfo.performance.memoryUsage.rss / 1024 / 1024)}MB\n                </span>\n              </div>\n              <div className=\"flex items-center justify-between text-xs\">\n                <span>프로세스 실행 시간:</span>\n                <span className=\"text-muted-foreground\">\n                  {Math.floor(moduleInfo.performance.processUptime / 60)}분\n                </span>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* 환경 정보 */}\n        {moduleInfo?.environment && (\n          <div className=\"space-y-2\">\n            <div className=\"flex items-center gap-2\">\n              <Settings className=\"h-4 w-4\" />\n              <span className=\"text-sm font-medium\">환경 정보</span>\n            </div>\n            <div className=\"pl-4 space-y-1\">\n              <div className=\"flex items-center justify-between text-xs\">\n                <span>환경:</span>\n                <span className=\"text-muted-foreground\">{moduleInfo.environment.nodeEnv}</span>\n              </div>\n              <div className=\"flex items-center justify-between text-xs\">\n                <span>개발 모드:</span>\n                {getStatusBadge(moduleInfo.environment.isDev, '활성')}\n              </div>\n              <div className=\"flex items-center justify-between text-xs\">\n                <span>작업 디렉토리:</span>\n                <span className=\"text-muted-foreground text-xs truncate max-w-32\">\n                  {moduleInfo.environment.workingDirectory}\n                </span>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* 권한 상태 */}\n        <div className=\"space-y-2\">\n          <div className=\"flex items-center gap-2\">\n            <AlertCircle className=\"h-4 w-4\" />\n            <span className=\"text-sm font-medium\">권한 상태</span>\n          </div>\n          <div className=\"pl-4 space-y-1\">\n            <div className=\"flex items-center justify-between text-xs\">\n              <span>접근성 권한:</span>\n              {getStatusBadge(moduleInfo?.permissions?.accessibility || false, '허용됨')}\n            </div>\n            <div className=\"flex items-center justify-between text-xs\">\n              <span>입력 모니터링:</span>\n              {getStatusBadge(moduleInfo?.permissions?.input || false, '허용됨')}\n            </div>\n          </div>\n        </div>\n\n        {/* 권한 요청 버튼 (macOS에서만) */}\n        {moduleInfo?.system?.platform?.toLowerCase().includes('mac') && \n         (!moduleInfo?.permissions?.accessibility || !moduleInfo?.permissions?.input) && (\n          <div className=\"pt-2 border-t\">\n            <button \n              className=\"w-full text-xs px-3 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors\"\n              onClick={() => {\n                alert('시스템 환경설정 > 보안 및 개인 정보 보호 > 개인 정보 보호에서 Loop에 접근성 및 입력 모니터링 권한을 허용해주세요.');\n              }}\n            >\n              권한 설정 안내\n            </button>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3915, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop_6/src/app/components/ui/settings.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Settings as SettingsIcon, Save, RotateCcw, Monitor, Moon, Sun, Minimize2, Maximize2, Eye, Bell, Cpu, Zap, Activity } from 'lucide-react';\nimport { useSettings, type SettingsState, type WindowModeType } from '../../../hooks/useSettings';\nimport { useTheme } from './ThemeProvider';\n\ninterface SettingsProps {\n  onSave?: (settings: SettingsState) => void;\n  initialSettings?: SettingsState;\n}\n\nexport function Settings({ onSave, initialSettings }: SettingsProps) {\n  const { \n    settings, \n    isLoading,\n    error,\n    saveSettings,\n    resetSettings,\n  } = useSettings();\n  \n  const { \n    theme, \n    isDarkMode, \n    toggleDarkMode: themeToggleDarkMode, \n    toggleTheme,\n    setTheme \n  } = useTheme();\n  \n  const [needsRestart, setNeedsRestart] = useState(false);\n  const [showSaveConfirm, setShowSaveConfirm] = useState(false);\n  const [localSettings, setLocalSettings] = useState<SettingsState>(settings);\n\n  // 설정이 변경될 때 로컬 상태 업데이트\n  useEffect(() => {\n    setLocalSettings(settings);\n  }, [settings]);\n\n  // 초기 설정이 제공된 경우 업데이트\n  useEffect(() => {\n    if (initialSettings) {\n      setLocalSettings(initialSettings);\n    }\n  }, [initialSettings]);\n\n  const handleCategoryChange = (category: keyof SettingsState['enabledCategories'], value: boolean) => {\n    setLocalSettings((prev: SettingsState) => ({\n      ...prev,\n      enabledCategories: {\n        ...prev.enabledCategories,\n        [category]: value\n      }\n    }));\n  };\n\n  const handleProcessingModeChange = (mode: SettingsState['processingMode']) => {\n    setLocalSettings((prev: SettingsState) => ({ ...prev, processingMode: mode }));\n    if (mode === 'gpu-intensive' || mode === 'cpu-intensive') {\n      setNeedsRestart(true);\n    }\n  };\n\n  const handleSave = async () => {\n    try {\n      await saveSettings(localSettings);\n      setShowSaveConfirm(true);\n      setTimeout(() => setShowSaveConfirm(false), 2000);\n      onSave?.(localSettings);\n    } catch (error) {\n      console.error('설정 저장 실패:', error);\n    }\n  };\n\n  const handleReset = async () => {\n    try {\n      await resetSettings();\n      setLocalSettings(settings);\n      setNeedsRestart(false);\n    } catch (error) {\n      console.error('설정 초기화 실패:', error);\n    }\n  };\n\n  const toggleDarkMode = async () => {\n    console.log('⚙️ Settings: 다크모드 토글 버튼 클릭');\n    await themeToggleDarkMode();\n  };\n\n  const changeWindowMode = (mode: WindowModeType) => {\n    setLocalSettings((prev: SettingsState) => ({ ...prev, windowMode: mode }));\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center p-8\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\n        <p className=\"text-red-600\">설정을 불러오는 중 오류가 발생했습니다: {error}</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 max-w-4xl mx-auto space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-2\">\n          <SettingsIcon className=\"h-6 w-6 text-blue-600\" />\n          <h1 className=\"text-2xl font-bold text-gray-800\">설정</h1>\n        </div>\n        <div className=\"flex space-x-2\">\n          <button\n            onClick={handleReset}\n            className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors flex items-center space-x-2\"\n          >\n            <RotateCcw className=\"h-4 w-4\" />\n            <span>초기화</span>\n          </button>\n          <button\n            onClick={handleSave}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center space-x-2\"\n          >\n            <Save className=\"h-4 w-4\" />\n            <span>저장</span>\n          </button>\n        </div>\n      </div>\n\n      {showSaveConfirm && (\n        <div className=\"bg-green-50 border border-green-200 rounded-lg p-3\">\n          <p className=\"text-green-600 font-medium\">설정이 성공적으로 저장되었습니다!</p>\n        </div>\n      )}\n\n      {needsRestart && (\n        <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-3\">\n          <p className=\"text-yellow-600 font-medium\">\n            일부 설정을 적용하려면 애플리케이션을 다시 시작해야 합니다.\n          </p>\n        </div>\n      )}\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* 일반 설정 */}\n        <div className=\"bg-white rounded-lg border p-6 space-y-4\">\n          <h2 className=\"text-lg font-semibold text-gray-800 flex items-center space-x-2\">\n            <Monitor className=\"h-5 w-5\" />\n            <span>일반 설정</span>\n          </h2>\n\n          <div className=\"space-y-4\">\n            {/* 다크 모드 */}\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-2\">\n                {isDarkMode ? <Moon className=\"h-4 w-4\" /> : <Sun className=\"h-4 w-4\" />}\n                <span>다크 모드</span>\n                <span className=\"text-xs text-gray-500\">({theme})</span>\n              </div>\n              <button\n                onClick={toggleDarkMode}\n                className={`w-12 h-6 rounded-full p-1 transition-colors ${\n                  isDarkMode ? 'bg-blue-600' : 'bg-gray-300'\n                }`}\n              >\n                <div\n                  className={`w-4 h-4 rounded-full bg-white transition-transform ${\n                    isDarkMode ? 'translate-x-6' : 'translate-x-0'\n                  }`}\n                />\n              </button>\n            </div>\n\n            {/* 창 모드 */}\n            <div className=\"space-y-2\">\n              <label className=\"text-sm font-medium text-gray-700\">창 모드</label>\n              <div className=\"grid grid-cols-1 gap-2\">\n                {(['windowed', 'fullscreen', 'fullscreen-auto-hide'] as WindowModeType[]).map((mode) => (\n                  <button\n                    key={mode}\n                    onClick={() => changeWindowMode(mode)}\n                    className={`p-2 text-left rounded border transition-colors ${\n                      localSettings.windowMode === mode\n                        ? 'border-blue-500 bg-blue-50 text-blue-700'\n                        : 'border-gray-200 hover:border-gray-300'\n                    }`}\n                  >\n                    <div className=\"flex items-center space-x-2\">\n                      {mode === 'windowed' && <Minimize2 className=\"h-4 w-4\" />}\n                      {mode === 'fullscreen' && <Maximize2 className=\"h-4 w-4\" />}\n                      {mode === 'fullscreen-auto-hide' && <Eye className=\"h-4 w-4\" />}\n                      <span>\n                        {mode === 'windowed' && '창 모드'}\n                        {mode === 'fullscreen' && '전체 화면'}\n                        {mode === 'fullscreen-auto-hide' && '전체 화면 (자동 숨김)'}\n                      </span>\n                    </div>\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            {/* 애니메이션 */}\n            <div className=\"flex items-center justify-between\">\n              <span>애니메이션 효과</span>\n              <button\n                onClick={() => setLocalSettings(prev => ({ ...prev, enableAnimations: !prev.enableAnimations }))}\n                className={`w-12 h-6 rounded-full p-1 transition-colors ${\n                  localSettings.enableAnimations ? 'bg-blue-600' : 'bg-gray-300'\n                }`}\n              >\n                <div\n                  className={`w-4 h-4 rounded-full bg-white transition-transform ${\n                    localSettings.enableAnimations ? 'translate-x-6' : 'translate-x-0'\n                  }`}\n                />\n              </button>\n            </div>\n\n            {/* 알림 */}\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-2\">\n                <Bell className=\"h-4 w-4\" />\n                <span>알림 활성화</span>\n              </div>\n              <button\n                onClick={() => setLocalSettings(prev => ({ ...prev, enableNotifications: !prev.enableNotifications }))}\n                className={`w-12 h-6 rounded-full p-1 transition-colors ${\n                  localSettings.enableNotifications ? 'bg-blue-600' : 'bg-gray-300'\n                }`}\n              >\n                <div\n                  className={`w-4 h-4 rounded-full bg-white transition-transform ${\n                    localSettings.enableNotifications ? 'translate-x-6' : 'translate-x-0'\n                  }`}\n                />\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* 성능 설정 */}\n        <div className=\"bg-white rounded-lg border p-6 space-y-4\">\n          <h2 className=\"text-lg font-semibold text-gray-800 flex items-center space-x-2\">\n            <Cpu className=\"h-5 w-5\" />\n            <span>성능 설정</span>\n          </h2>\n\n          <div className=\"space-y-4\">\n            {/* GPU 가속 */}\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-2\">\n                <Zap className=\"h-4 w-4\" />\n                <span>GPU 가속</span>\n              </div>\n              <button\n                onClick={() => setLocalSettings(prev => ({ ...prev, enableGPUAcceleration: !prev.enableGPUAcceleration }))}\n                className={`w-12 h-6 rounded-full p-1 transition-colors ${\n                  localSettings.enableGPUAcceleration ? 'bg-blue-600' : 'bg-gray-300'\n                }`}\n              >\n                <div\n                  className={`w-4 h-4 rounded-full bg-white transition-transform ${\n                    localSettings.enableGPUAcceleration ? 'translate-x-6' : 'translate-x-0'\n                  }`}\n                />\n              </button>\n            </div>\n\n            {/* 메모리 최적화 */}\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-2\">\n                <Activity className=\"h-4 w-4\" />\n                <span>메모리 최적화</span>\n              </div>\n              <button\n                onClick={() => setLocalSettings(prev => ({ ...prev, enableMemoryOptimization: !prev.enableMemoryOptimization }))}\n                className={`w-12 h-6 rounded-full p-1 transition-colors ${\n                  localSettings.enableMemoryOptimization ? 'bg-blue-600' : 'bg-gray-300'\n                }`}\n              >\n                <div\n                  className={`w-4 h-4 rounded-full bg-white transition-transform ${\n                    localSettings.enableMemoryOptimization ? 'translate-x-6' : 'translate-x-0'\n                  }`}\n                />\n              </button>\n            </div>\n\n            {/* 처리 모드 */}\n            <div className=\"space-y-2\">\n              <label className=\"text-sm font-medium text-gray-700\">처리 모드</label>\n              <select\n                value={localSettings.processingMode}\n                onChange={(e) => handleProcessingModeChange(e.target.value as SettingsState['processingMode'])}\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                <option value=\"auto\">자동</option>\n                <option value=\"normal\">일반</option>\n                <option value=\"cpu-intensive\">CPU 집약적</option>\n                <option value=\"gpu-intensive\">GPU 집약적</option>\n              </select>\n            </div>\n\n            {/* 메모리 임계값 */}\n            <div className=\"space-y-2\">\n              <label className=\"text-sm font-medium text-gray-700\">\n                최대 메모리 임계값: {localSettings.maxMemoryThreshold}MB\n              </label>\n              <input\n                type=\"range\"\n                min=\"100\"\n                max=\"2048\"\n                step=\"50\"\n                value={localSettings.maxMemoryThreshold}\n                onChange={(e) => setLocalSettings(prev => ({ ...prev, maxMemoryThreshold: parseInt(e.target.value) }))}\n                className=\"w-full\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* 타이핑 분석 설정 */}\n        <div className=\"bg-white rounded-lg border p-6 space-y-4\">\n          <h2 className=\"text-lg font-semibold text-gray-800\">타이핑 분석</h2>\n\n          <div className=\"space-y-4\">\n            {/* 카테고리 활성화 */}\n            <div className=\"space-y-2\">\n              <label className=\"text-sm font-medium text-gray-700\">분석 카테고리</label>\n              <div className=\"space-y-2\">\n                {Object.entries(localSettings.enabledCategories).map(([category, enabled]) => (\n                  <div key={category} className=\"flex items-center justify-between\">\n                    <span className=\"capitalize\">\n                      {category === 'docs' && '문서'}\n                      {category === 'office' && '오피스'}\n                      {category === 'coding' && '코딩'}\n                      {category === 'sns' && 'SNS'}\n                    </span>\n                    <button\n                      onClick={() => handleCategoryChange(category as keyof SettingsState['enabledCategories'], !enabled)}\n                      className={`w-12 h-6 rounded-full p-1 transition-colors ${\n                        enabled ? 'bg-blue-600' : 'bg-gray-300'\n                      }`}\n                    >\n                      <div\n                        className={`w-4 h-4 rounded-full bg-white transition-transform ${\n                          enabled ? 'translate-x-6' : 'translate-x-0'\n                        }`}\n                      />\n                    </button>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* 실시간 통계 */}\n            <div className=\"flex items-center justify-between\">\n              <span>실시간 통계 표시</span>\n              <button\n                onClick={() => setLocalSettings(prev => ({ ...prev, enableRealTimeStats: !prev.enableRealTimeStats }))}\n                className={`w-12 h-6 rounded-full p-1 transition-colors ${\n                  localSettings.enableRealTimeStats ? 'bg-blue-600' : 'bg-gray-300'\n                }`}\n              >\n                <div\n                  className={`w-4 h-4 rounded-full bg-white transition-transform ${\n                    localSettings.enableRealTimeStats ? 'translate-x-6' : 'translate-x-0'\n                  }`}\n                />\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* 데이터 설정 */}\n        <div className=\"bg-white rounded-lg border p-6 space-y-4\">\n          <h2 className=\"text-lg font-semibold text-gray-800\">데이터 및 개인정보</h2>\n\n          <div className=\"space-y-4\">\n            {/* 데이터 수집 */}\n            <div className=\"flex items-center justify-between\">\n              <span>데이터 수집 허용</span>\n              <button\n                onClick={() => setLocalSettings(prev => ({ ...prev, enableDataCollection: !prev.enableDataCollection }))}\n                className={`w-12 h-6 rounded-full p-1 transition-colors ${\n                  localSettings.enableDataCollection ? 'bg-blue-600' : 'bg-gray-300'\n                }`}\n              >\n                <div\n                  className={`w-4 h-4 rounded-full bg-white transition-transform ${\n                    localSettings.enableDataCollection ? 'translate-x-6' : 'translate-x-0'\n                  }`}\n                />\n              </button>\n            </div>\n\n            {/* 자동 저장 */}\n            <div className=\"flex items-center justify-between\">\n              <span>자동 저장</span>\n              <button\n                onClick={() => setLocalSettings(prev => ({ ...prev, enableAutoSave: !prev.enableAutoSave }))}\n                className={`w-12 h-6 rounded-full p-1 transition-colors ${\n                  localSettings.enableAutoSave ? 'bg-blue-600' : 'bg-gray-300'\n                }`}\n              >\n                <div\n                  className={`w-4 h-4 rounded-full bg-white transition-transform ${\n                    localSettings.enableAutoSave ? 'translate-x-6' : 'translate-x-0'\n                  }`}\n                />\n              </button>\n            </div>\n\n            {/* 데이터 보관 기간 */}\n            <div className=\"space-y-2\">\n              <label className=\"text-sm font-medium text-gray-700\">\n                데이터 보관 기간: {localSettings.dataRetentionDays}일\n              </label>\n              <input\n                type=\"range\"\n                min=\"7\"\n                max=\"365\"\n                step=\"7\"\n                value={localSettings.dataRetentionDays}\n                onChange={(e) => setLocalSettings(prev => ({ ...prev, dataRetentionDays: parseInt(e.target.value) }))}\n                className=\"w-full\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;AALA;;;;;AAYO,SAAS,SAAS,EAAE,MAAM,EAAE,eAAe,EAAiB;;IACjE,MAAM,EACJ,QAAQ,EACR,SAAS,EACT,KAAK,EACL,YAAY,EACZ,aAAa,EACd,GAAG,CAAA,GAAA,8HAAA,CAAA,cAAW,AAAD;IAEd,MAAM,EACJ,KAAK,EACL,UAAU,EACV,gBAAgB,mBAAmB,EACnC,WAAW,EACX,QAAQ,EACT,GAAG,CAAA,GAAA,mJAAA,CAAA,WAAQ,AAAD;IAEX,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElE,uBAAuB;IACvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8BAAE;YACR,iBAAiB;QACnB;6BAAG;QAAC;KAAS;IAEb,qBAAqB;IACrB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8BAAE;YACR,IAAI,iBAAiB;gBACnB,iBAAiB;YACnB;QACF;6BAAG;QAAC;KAAgB;IAEpB,MAAM,uBAAuB,CAAC,UAAoD;QAChF,iBAAiB,CAAC,OAAwB,CAAC;gBACzC,GAAG,IAAI;gBACP,mBAAmB;oBACjB,GAAG,KAAK,iBAAiB;oBACzB,CAAC,SAAS,EAAE;gBACd;YACF,CAAC;IACH;IAEA,MAAM,6BAA6B,CAAC;QAClC,iBAAiB,CAAC,OAAwB,CAAC;gBAAE,GAAG,IAAI;gBAAE,gBAAgB;YAAK,CAAC;QAC5E,IAAI,SAAS,mBAAmB,SAAS,iBAAiB;YACxD,gBAAgB;QAClB;IACF;IAEA,MAAM,aAAa;QACjB,IAAI;YACF,MAAM,aAAa;YACnB,mBAAmB;YACnB,WAAW,IAAM,mBAAmB,QAAQ;YAC5C,SAAS;QACX,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,aAAa;QAC7B;IACF;IAEA,MAAM,cAAc;QAClB,IAAI;YACF,MAAM;YACN,iBAAiB;YACjB,gBAAgB;QAClB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,cAAc;QAC9B;IACF;IAEA,MAAM,iBAAiB;QACrB,QAAQ,GAAG,CAAC;QACZ,MAAM;IACR;IAEA,MAAM,mBAAmB,CAAC;QACxB,iBAAiB,CAAC,OAAwB,CAAC;gBAAE,GAAG,IAAI;gBAAE,YAAY;YAAK,CAAC;IAC1E;IAEA,IAAI,WAAW;QACb,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;;;;;;;;;;IAGrB;IAEA,IAAI,OAAO;QACT,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAE,WAAU;;oBAAe;oBAAwB;;;;;;;;;;;;IAG1D;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,6MAAA,CAAA,WAAY;gCAAC,WAAU;;;;;;0CACxB,6LAAC;gCAAG,WAAU;0CAAmC;;;;;;;;;;;;kCAEnD,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCACC,SAAS;gCACT,WAAU;;kDAEV,6LAAC,mNAAA,CAAA,YAAS;wCAAC,WAAU;;;;;;kDACrB,6LAAC;kDAAK;;;;;;;;;;;;0CAER,6LAAC;gCACC,SAAS;gCACT,WAAU;;kDAEV,6LAAC,qMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;kDAChB,6LAAC;kDAAK;;;;;;;;;;;;;;;;;;;;;;;;YAKX,iCACC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAE,WAAU;8BAA6B;;;;;;;;;;;YAI7C,8BACC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAE,WAAU;8BAA8B;;;;;;;;;;;0BAM/C,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAG,WAAU;;kDACZ,6LAAC,2MAAA,CAAA,UAAO;wCAAC,WAAU;;;;;;kDACnB,6LAAC;kDAAK;;;;;;;;;;;;0CAGR,6LAAC;gCAAI,WAAU;;kDAEb,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;;oDACZ,2BAAa,6LAAC,qMAAA,CAAA,OAAI;wDAAC,WAAU;;;;;6EAAe,6LAAC,mMAAA,CAAA,MAAG;wDAAC,WAAU;;;;;;kEAC5D,6LAAC;kEAAK;;;;;;kEACN,6LAAC;wDAAK,WAAU;;4DAAwB;4DAAE;4DAAM;;;;;;;;;;;;;0DAElD,6LAAC;gDACC,SAAS;gDACT,WAAW,CAAC,4CAA4C,EACtD,aAAa,gBAAgB,eAC7B;0DAEF,cAAA,6LAAC;oDACC,WAAW,CAAC,mDAAmD,EAC7D,aAAa,kBAAkB,iBAC/B;;;;;;;;;;;;;;;;;kDAMR,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAM,WAAU;0DAAoC;;;;;;0DACrD,6LAAC;gDAAI,WAAU;0DACZ,AAAC;oDAAC;oDAAY;oDAAc;iDAAuB,CAAsB,GAAG,CAAC,CAAC,qBAC7E,6LAAC;wDAEC,SAAS,IAAM,iBAAiB;wDAChC,WAAW,CAAC,+CAA+C,EACzD,cAAc,UAAU,KAAK,OACzB,6CACA,yCACJ;kEAEF,cAAA,6LAAC;4DAAI,WAAU;;gEACZ,SAAS,4BAAc,6LAAC,mNAAA,CAAA,YAAS;oEAAC,WAAU;;;;;;gEAC5C,SAAS,8BAAgB,6LAAC,mNAAA,CAAA,YAAS;oEAAC,WAAU;;;;;;gEAC9C,SAAS,wCAA0B,6LAAC,mMAAA,CAAA,MAAG;oEAAC,WAAU;;;;;;8EACnD,6LAAC;;wEACE,SAAS,cAAc;wEACvB,SAAS,gBAAgB;wEACzB,SAAS,0BAA0B;;;;;;;;;;;;;uDAfnC;;;;;;;;;;;;;;;;kDAwBb,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;0DAAK;;;;;;0DACN,6LAAC;gDACC,SAAS,IAAM,iBAAiB,CAAA,OAAQ,CAAC;4DAAE,GAAG,IAAI;4DAAE,kBAAkB,CAAC,KAAK,gBAAgB;wDAAC,CAAC;gDAC9F,WAAW,CAAC,4CAA4C,EACtD,cAAc,gBAAgB,GAAG,gBAAgB,eACjD;0DAEF,cAAA,6LAAC;oDACC,WAAW,CAAC,mDAAmD,EAC7D,cAAc,gBAAgB,GAAG,kBAAkB,iBACnD;;;;;;;;;;;;;;;;;kDAMR,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;;kEACb,6LAAC,qMAAA,CAAA,OAAI;wDAAC,WAAU;;;;;;kEAChB,6LAAC;kEAAK;;;;;;;;;;;;0DAER,6LAAC;gDACC,SAAS,IAAM,iBAAiB,CAAA,OAAQ,CAAC;4DAAE,GAAG,IAAI;4DAAE,qBAAqB,CAAC,KAAK,mBAAmB;wDAAC,CAAC;gDACpG,WAAW,CAAC,4CAA4C,EACtD,cAAc,mBAAmB,GAAG,gBAAgB,eACpD;0DAEF,cAAA,6LAAC;oDACC,WAAW,CAAC,mDAAmD,EAC7D,cAAc,mBAAmB,GAAG,kBAAkB,iBACtD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAQZ,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAG,WAAU;;kDACZ,6LAAC,mMAAA,CAAA,MAAG;wCAAC,WAAU;;;;;;kDACf,6LAAC;kDAAK;;;;;;;;;;;;0CAGR,6LAAC;gCAAI,WAAU;;kDAEb,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;;kEACb,6LAAC,mMAAA,CAAA,MAAG;wDAAC,WAAU;;;;;;kEACf,6LAAC;kEAAK;;;;;;;;;;;;0DAER,6LAAC;gDACC,SAAS,IAAM,iBAAiB,CAAA,OAAQ,CAAC;4DAAE,GAAG,IAAI;4DAAE,uBAAuB,CAAC,KAAK,qBAAqB;wDAAC,CAAC;gDACxG,WAAW,CAAC,4CAA4C,EACtD,cAAc,qBAAqB,GAAG,gBAAgB,eACtD;0DAEF,cAAA,6LAAC;oDACC,WAAW,CAAC,mDAAmD,EAC7D,cAAc,qBAAqB,GAAG,kBAAkB,iBACxD;;;;;;;;;;;;;;;;;kDAMR,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;;kEACb,6LAAC,6MAAA,CAAA,WAAQ;wDAAC,WAAU;;;;;;kEACpB,6LAAC;kEAAK;;;;;;;;;;;;0DAER,6LAAC;gDACC,SAAS,IAAM,iBAAiB,CAAA,OAAQ,CAAC;4DAAE,GAAG,IAAI;4DAAE,0BAA0B,CAAC,KAAK,wBAAwB;wDAAC,CAAC;gDAC9G,WAAW,CAAC,4CAA4C,EACtD,cAAc,wBAAwB,GAAG,gBAAgB,eACzD;0DAEF,cAAA,6LAAC;oDACC,WAAW,CAAC,mDAAmD,EAC7D,cAAc,wBAAwB,GAAG,kBAAkB,iBAC3D;;;;;;;;;;;;;;;;;kDAMR,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAM,WAAU;0DAAoC;;;;;;0DACrD,6LAAC;gDACC,OAAO,cAAc,cAAc;gDACnC,UAAU,CAAC,IAAM,2BAA2B,EAAE,MAAM,CAAC,KAAK;gDAC1D,WAAU;;kEAEV,6LAAC;wDAAO,OAAM;kEAAO;;;;;;kEACrB,6LAAC;wDAAO,OAAM;kEAAS;;;;;;kEACvB,6LAAC;wDAAO,OAAM;kEAAgB;;;;;;kEAC9B,6LAAC;wDAAO,OAAM;kEAAgB;;;;;;;;;;;;;;;;;;kDAKlC,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAM,WAAU;;oDAAoC;oDACtC,cAAc,kBAAkB;oDAAC;;;;;;;0DAEhD,6LAAC;gDACC,MAAK;gDACL,KAAI;gDACJ,KAAI;gDACJ,MAAK;gDACL,OAAO,cAAc,kBAAkB;gDACvC,UAAU,CAAC,IAAM,iBAAiB,CAAA,OAAQ,CAAC;4DAAE,GAAG,IAAI;4DAAE,oBAAoB,SAAS,EAAE,MAAM,CAAC,KAAK;wDAAE,CAAC;gDACpG,WAAU;;;;;;;;;;;;;;;;;;;;;;;;kCAOlB,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAG,WAAU;0CAAsC;;;;;;0CAEpD,6LAAC;gCAAI,WAAU;;kDAEb,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAM,WAAU;0DAAoC;;;;;;0DACrD,6LAAC;gDAAI,WAAU;0DACZ,OAAO,OAAO,CAAC,cAAc,iBAAiB,EAAE,GAAG,CAAC,CAAC,CAAC,UAAU,QAAQ,iBACvE,6LAAC;wDAAmB,WAAU;;0EAC5B,6LAAC;gEAAK,WAAU;;oEACb,aAAa,UAAU;oEACvB,aAAa,YAAY;oEACzB,aAAa,YAAY;oEACzB,aAAa,SAAS;;;;;;;0EAEzB,6LAAC;gEACC,SAAS,IAAM,qBAAqB,UAAsD,CAAC;gEAC3F,WAAW,CAAC,4CAA4C,EACtD,UAAU,gBAAgB,eAC1B;0EAEF,cAAA,6LAAC;oEACC,WAAW,CAAC,mDAAmD,EAC7D,UAAU,kBAAkB,iBAC5B;;;;;;;;;;;;uDAhBE;;;;;;;;;;;;;;;;kDAyBhB,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;0DAAK;;;;;;0DACN,6LAAC;gDACC,SAAS,IAAM,iBAAiB,CAAA,OAAQ,CAAC;4DAAE,GAAG,IAAI;4DAAE,qBAAqB,CAAC,KAAK,mBAAmB;wDAAC,CAAC;gDACpG,WAAW,CAAC,4CAA4C,EACtD,cAAc,mBAAmB,GAAG,gBAAgB,eACpD;0DAEF,cAAA,6LAAC;oDACC,WAAW,CAAC,mDAAmD,EAC7D,cAAc,mBAAmB,GAAG,kBAAkB,iBACtD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAQZ,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAG,WAAU;0CAAsC;;;;;;0CAEpD,6LAAC;gCAAI,WAAU;;kDAEb,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;0DAAK;;;;;;0DACN,6LAAC;gDACC,SAAS,IAAM,iBAAiB,CAAA,OAAQ,CAAC;4DAAE,GAAG,IAAI;4DAAE,sBAAsB,CAAC,KAAK,oBAAoB;wDAAC,CAAC;gDACtG,WAAW,CAAC,4CAA4C,EACtD,cAAc,oBAAoB,GAAG,gBAAgB,eACrD;0DAEF,cAAA,6LAAC;oDACC,WAAW,CAAC,mDAAmD,EAC7D,cAAc,oBAAoB,GAAG,kBAAkB,iBACvD;;;;;;;;;;;;;;;;;kDAMR,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;0DAAK;;;;;;0DACN,6LAAC;gDACC,SAAS,IAAM,iBAAiB,CAAA,OAAQ,CAAC;4DAAE,GAAG,IAAI;4DAAE,gBAAgB,CAAC,KAAK,cAAc;wDAAC,CAAC;gDAC1F,WAAW,CAAC,4CAA4C,EACtD,cAAc,cAAc,GAAG,gBAAgB,eAC/C;0DAEF,cAAA,6LAAC;oDACC,WAAW,CAAC,mDAAmD,EAC7D,cAAc,cAAc,GAAG,kBAAkB,iBACjD;;;;;;;;;;;;;;;;;kDAMR,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAM,WAAU;;oDAAoC;oDACvC,cAAc,iBAAiB;oDAAC;;;;;;;0DAE9C,6LAAC;gDACC,MAAK;gDACL,KAAI;gDACJ,KAAI;gDACJ,MAAK;gDACL,OAAO,cAAc,iBAAiB;gDACtC,UAAU,CAAC,IAAM,iBAAiB,CAAA,OAAQ,CAAC;4DAAE,GAAG,IAAI;4DAAE,mBAAmB,SAAS,EAAE,MAAM,CAAC,KAAK;wDAAE,CAAC;gDACnG,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ1B;GA1agB;;QAOV,8HAAA,CAAA,cAAW;QAQX,mJAAA,CAAA,WAAQ;;;KAfE","debugId":null}},
    {"offset": {"line": 4964, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop_6/src/app/components/ui/activity-monitor.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { Activity, Cpu, MemoryStick, HardDrive, Zap, RefreshCw, AlertTriangle, Monitor } from 'lucide-react'\n\ninterface ProcessInfo {\n  pid: number\n  name: string\n  cpuUsage: number\n  memoryUsage: number\n  memoryPercent: number\n  status: string\n  ppid?: number\n  user?: string\n}\n\ninterface CPUInfo {\n  usage: number\n  temperature?: number\n  model: string\n  cores: number\n  threads: number\n  speed: number\n}\n\ninterface SystemInfo {\n  cpu: CPUInfo\n  processes: ProcessInfo[]\n  uptime: number\n  loadAverage: number[]\n  platform: string\n  arch: string\n  hostname: string\n  timestamp: number\n}\n\ninterface MemoryInfo {\n  total: number\n  used: number\n  free: number\n  percentage: number\n}\n\ninterface ActivityMonitorProps {\n  className?: string\n  autoRefresh?: boolean\n  refreshInterval?: number\n}\n\nexport const ActivityMonitor: React.FC<ActivityMonitorProps> = ({\n  className = '',\n  autoRefresh = true,\n  refreshInterval = 3000\n}) => {\n  const [systemInfo, setSystemInfo] = useState<SystemInfo | null>(null)\n  const [memoryInfo, setMemoryInfo] = useState<MemoryInfo | null>(null)\n  const [loopProcesses, setLoopProcesses] = useState<ProcessInfo[]>([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [selectedProcess, setSelectedProcess] = useState<ProcessInfo | null>(null)\n\n  // 시스템 정보 가져오기\n  const fetchSystemInfo = useCallback(async () => {\n    try {\n      setIsLoading(true)\n      setError(null)\n      \n      if (typeof window !== 'undefined' && window.electronAPI) {\n        // 시스템 정보 가져오기\n        const systemResponse = await window.electronAPI.system.getInfo()\n        \n        if (systemResponse.success && systemResponse.data) {\n          setSystemInfo(systemResponse.data)\n        } else {\n          throw new Error(systemResponse.error || '시스템 정보를 가져올 수 없습니다')\n        }\n\n        // 메모리 정보 가져오기\n        const memoryResponse = await window.electronAPI.memory.getInfo()\n        \n        if (memoryResponse.success && memoryResponse.data) {\n          setMemoryInfo(memoryResponse.data.system)\n        }\n\n        // Loop 프로세스 정보 가져오기\n        const loopResponse = await window.electronAPI.system.getLoopProcesses()\n        \n        if (loopResponse.success && loopResponse.data) {\n          setLoopProcesses(loopResponse.data)\n        }\n      }\n    } catch (err) {\n      console.error('시스템 정보 가져오기 실패:', err)\n      setError(err instanceof Error ? err.message : '알 수 없는 오류')\n    } finally {\n      setIsLoading(false)\n    }\n  }, [])\n\n  // 자동 새로고침\n  useEffect(() => {\n    fetchSystemInfo()\n    \n    if (autoRefresh) {\n      const interval = setInterval(fetchSystemInfo, refreshInterval)\n      return () => clearInterval(interval)\n    }\n  }, [fetchSystemInfo, autoRefresh, refreshInterval])\n\n  // 메모리 크기 포맷팅\n  const formatMemorySize = (megabytes: number) => {\n    if (megabytes >= 1024) {\n      return `${(megabytes / 1024).toFixed(1)} GB`\n    }\n    return `${megabytes.toFixed(1)} MB`\n  }\n\n  // 업타임 포맷팅\n  const formatUptime = (seconds: number) => {\n    const minutes = Math.floor(seconds / 60)\n    const hours = Math.floor(minutes / 60)\n    const days = Math.floor(hours / 24)\n    \n    if (days > 0) return `${days}일 ${hours % 24}시간`\n    if (hours > 0) return `${hours}시간 ${minutes % 60}분`\n    return `${minutes}분 ${seconds % 60}초`\n  }\n\n  // 사용량에 따른 색상\n  const getUsageColor = (percentage: number) => {\n    if (percentage >= 80) return 'text-red-500'\n    if (percentage >= 60) return 'text-yellow-500'\n    return 'text-green-500'\n  }\n\n  const getProgressColor = (percentage: number) => {\n    if (percentage >= 80) return 'bg-red-500'\n    if (percentage >= 60) return 'bg-yellow-500'\n    return 'bg-green-500'\n  }\n\n  // 프로세스 상태에 따른 아이콘\n  const getProcessIcon = (name: string) => {\n    if (name.toLowerCase().includes('main')) return <Cpu className=\"w-3 h-3\" />\n    if (name.toLowerCase().includes('renderer')) return <Monitor className=\"w-3 h-3\" />\n    if (name.toLowerCase().includes('gpu')) return <Zap className=\"w-3 h-3\" />\n    return <Activity className=\"w-3 h-3\" />\n  }\n\n  const getProcessColor = (name: string) => {\n    if (name.toLowerCase().includes('main')) return 'text-blue-500'\n    if (name.toLowerCase().includes('renderer')) return 'text-green-500'\n    if (name.toLowerCase().includes('gpu')) return 'text-purple-500'\n    return 'text-gray-500'\n  }\n\n  return (\n    <div className={`bg-white rounded-lg border border-gray-200 ${className}`}>\n      {/* 헤더 */}\n      <div className=\"flex items-center justify-between p-4 border-b border-gray-200\">\n        <div className=\"flex items-center gap-2\">\n          <Activity className=\"w-5 h-5 text-blue-500\" />\n          <h3 className=\"text-lg font-semibold text-gray-900\">활성 상태 모니터</h3>\n          {isLoading && (\n            <div className=\"animate-spin rounded-full h-4 w-4 border-2 border-blue-500 border-t-transparent\"></div>\n          )}\n        </div>\n        \n        <div className=\"flex items-center gap-2\">\n          <button\n            onClick={fetchSystemInfo}\n            disabled={isLoading}\n            className=\"p-2 text-gray-500 hover:text-gray-700 hover:bg-gray-100 rounded transition-colors\"\n            title=\"새로고침\"\n          >\n            <RefreshCw className={`w-4 h-4 ${isLoading ? 'animate-spin' : ''}`} />\n          </button>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"m-4 p-3 bg-red-50 border border-red-200 rounded-lg flex items-center gap-2\">\n          <AlertTriangle className=\"w-4 h-4 text-red-500\" />\n          <span className=\"text-sm text-red-700\">{error}</span>\n        </div>\n      )}\n\n      {systemInfo ? (\n        <div className=\"p-4 space-y-6\">\n          {/* CPU 및 메모리 요약 */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {/* CPU */}\n            <div className=\"bg-gray-50 rounded-lg p-4\">\n              <div className=\"flex items-center gap-2 mb-3\">\n                <Cpu className=\"w-4 h-4 text-blue-500\" />\n                <h4 className=\"font-medium text-gray-900\">CPU</h4>\n                <span className={`text-sm font-semibold ${getUsageColor(systemInfo.cpu.usage)}`}>\n                  {systemInfo.cpu.usage.toFixed(1)}%\n                </span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2 mb-2\">\n                <div \n                  className={`h-2 rounded-full transition-all duration-300 ${getProgressColor(systemInfo.cpu.usage)}`}\n                  style={{ width: `${Math.min(systemInfo.cpu.usage, 100)}%` }}\n                />\n              </div>\n              <div className=\"text-xs text-gray-500\">\n                {systemInfo.cpu.cores}코어 • {systemInfo.cpu.model}\n              </div>\n            </div>\n\n            {/* 메모리 */}\n            {memoryInfo && (\n              <div className=\"bg-gray-50 rounded-lg p-4\">\n                <div className=\"flex items-center gap-2 mb-3\">\n                  <MemoryStick className=\"w-4 h-4 text-green-500\" />\n                  <h4 className=\"font-medium text-gray-900\">메모리</h4>\n                  <span className={`text-sm font-semibold ${getUsageColor(memoryInfo.percentage)}`}>\n                    {memoryInfo.percentage.toFixed(1)}%\n                  </span>\n                </div>\n                <div className=\"w-full bg-gray-200 rounded-full h-2 mb-2\">\n                  <div \n                    className={`h-2 rounded-full transition-all duration-300 ${getProgressColor(memoryInfo.percentage)}`}\n                    style={{ width: `${Math.min(memoryInfo.percentage, 100)}%` }}\n                  />\n                </div>\n                <div className=\"text-xs text-gray-500\">\n                  {formatMemorySize(memoryInfo.used)} / {formatMemorySize(memoryInfo.total)} 사용됨\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* 프로세스 목록 */}\n          <div>\n            <h4 className=\"font-medium text-gray-900 mb-3\">Loop 프로세스</h4>\n            <div className=\"bg-gray-50 rounded-lg overflow-hidden\">\n              <div className=\"grid grid-cols-4 gap-4 p-3 text-xs font-medium text-gray-500 border-b border-gray-200\">\n                <div>프로세스</div>\n                <div className=\"text-right\">PID</div>\n                <div className=\"text-right\">CPU</div>\n                <div className=\"text-right\">메모리</div>\n              </div>\n              <div className=\"max-h-60 overflow-y-auto\">\n                {loopProcesses.length > 0 ? loopProcesses.map((process) => (\n                  <div\n                    key={process.pid}\n                    className={`grid grid-cols-4 gap-4 p-3 text-sm hover:bg-white cursor-pointer transition-colors ${\n                      selectedProcess?.pid === process.pid ? 'bg-blue-50 border-l-2 border-blue-500' : ''\n                    }`}\n                    onClick={() => setSelectedProcess(process)}\n                  >\n                    <div className=\"flex items-center gap-2\">\n                      <span className={getProcessColor(process.name)}>\n                        {getProcessIcon(process.name)}\n                      </span>\n                      <span className=\"truncate\">{process.name}</span>\n                    </div>\n                    <div className=\"text-right text-gray-500\">{process.pid}</div>\n                    <div className={`text-right ${getUsageColor(process.cpuUsage)}`}>\n                      {process.cpuUsage.toFixed(1)}%\n                    </div>\n                    <div className=\"text-right font-medium\">\n                      {formatMemorySize(process.memoryUsage)}\n                    </div>\n                  </div>\n                )) : (\n                  <div className=\"p-4 text-center text-gray-500 text-sm\">\n                    Loop 프로세스를 찾을 수 없습니다\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* 시스템 정보 */}\n          <div className=\"bg-gray-50 rounded-lg p-4\">\n            <h4 className=\"font-medium text-gray-900 mb-3\">시스템 정보</h4>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n              <div>\n                <span className=\"text-gray-500\">업타임</span>\n                <div className=\"font-medium\">{formatUptime(systemInfo.uptime)}</div>\n              </div>\n              <div>\n                <span className=\"text-gray-500\">플랫폼</span>\n                <div className=\"font-medium\">{systemInfo.platform}</div>\n              </div>\n              <div>\n                <span className=\"text-gray-500\">아키텍처</span>\n                <div className=\"font-medium\">{systemInfo.arch}</div>\n              </div>\n              <div>\n                <span className=\"text-gray-500\">호스트명</span>\n                <div className=\"font-medium\">{systemInfo.hostname}</div>\n              </div>\n              {memoryInfo && (\n                <>\n                  <div>\n                    <span className=\"text-gray-500\">총 메모리</span>\n                    <div className=\"font-medium\">{formatMemorySize(memoryInfo.total)}</div>\n                  </div>\n                  <div>\n                    <span className=\"text-gray-500\">여유 메모리</span>\n                    <div className=\"font-medium text-green-600\">{formatMemorySize(memoryInfo.free)}</div>\n                  </div>\n                </>\n              )}\n              <div>\n                <span className=\"text-gray-500\">로드 평균</span>\n                <div className=\"font-medium\">{systemInfo.loadAverage.map(l => l.toFixed(2)).join(', ')}</div>\n              </div>\n              <div>\n                <span className=\"text-gray-500\">CPU 속도</span>\n                <div className=\"font-medium\">{systemInfo.cpu.speed} MHz</div>\n              </div>\n            </div>\n          </div>\n\n          {/* 선택된 프로세스 상세 정보 */}\n          {selectedProcess && (\n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n              <h4 className=\"font-medium text-blue-900 mb-3\">프로세스 상세 정보</h4>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n                <div>\n                  <span className=\"text-blue-600\">이름</span>\n                  <div className=\"font-medium\">{selectedProcess.name}</div>\n                </div>\n                <div>\n                  <span className=\"text-blue-600\">PID</span>\n                  <div className=\"font-medium\">{selectedProcess.pid}</div>\n                </div>\n                <div>\n                  <span className=\"text-blue-600\">CPU 사용률</span>\n                  <div className=\"font-medium\">{selectedProcess.cpuUsage.toFixed(1)}%</div>\n                </div>\n                <div>\n                  <span className=\"text-blue-600\">메모리 사용량</span>\n                  <div className=\"font-medium\">{formatMemorySize(selectedProcess.memoryUsage)}</div>\n                </div>\n                {selectedProcess.ppid && (\n                  <div>\n                    <span className=\"text-blue-600\">부모 PID</span>\n                    <div className=\"font-medium\">{selectedProcess.ppid}</div>\n                  </div>\n                )}\n                <div>\n                  <span className=\"text-blue-600\">상태</span>\n                  <div className=\"font-medium\">{selectedProcess.status}</div>\n                </div>\n                <div>\n                  <span className=\"text-blue-600\">메모리 비율</span>\n                  <div className=\"font-medium\">{selectedProcess.memoryPercent.toFixed(1)}%</div>\n                </div>\n                {selectedProcess.user && (\n                  <div>\n                    <span className=\"text-blue-600\">사용자</span>\n                    <div className=\"font-medium\">{selectedProcess.user}</div>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n      ) : (\n        <div className=\"text-center py-8 text-gray-500\">\n          <Activity className=\"w-12 h-12 mx-auto mb-3 text-gray-300\" />\n          <p>시스템 정보를 불러오는 중...</p>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ActivityMonitor\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5992, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop_6/src/app/utils/init-styles.ts"],"sourcesContent":["// Loop 앱 CSS 변수 초기화 및 스타일 강제 적용\nconst initStyles = () => {\n  // CSS 변수가 적용되었는지 확인하되, ThemeProvider가 관리하는 테마는 건드리지 않음\n  let style = document.getElementById('loop-init-styles');\n  \n  // 이미 스타일이 있으면 제거하지 않고 업데이트만 함\n  if (!style) {\n    style = document.createElement('style');\n    style.id = 'loop-init-styles';\n    document.head.appendChild(style);\n  }\n  \n  style.textContent = `\n    /* Loop 앱 기본 CSS 변수 - ThemeProvider보다 낮은 우선순위 */\n    :root {\n      --background-color: #f9f9f9;\n      --text-color: #333;\n      --primary-color: #0070f3;\n      --text-secondary: #666;\n      --border-color: #e0e0e0;\n      --card-bg: #ffffff;\n      --header-bg: #ffffff;\n      --footer-bg: #f0f0f0;\n    }\n    \n    /* 다크모드 변수 정의 - ThemeProvider가 .dark 클래스를 추가하면 적용됨 */\n    .dark, .dark-mode, [data-theme=\"dark\"] {\n      --background-color: #121212 !important;\n      --text-color: #e0e0e0 !important;\n      --text-secondary: #a0a0a0 !important;\n      --border-color: #333 !important;\n      --card-bg: #1e1e1e !important;\n      --header-bg: #1e1e1e !important;\n      --footer-bg: #121212 !important;\n    }\n    \n    /* body에 CSS 변수 적용 - transition 포함 */\n    body {\n      background-color: var(--background-color) !important;\n      color: var(--text-color) !important;\n      transition: background-color 0.3s ease, color 0.3s ease;\n    }\n    \n    /* 카드 및 주요 컴포넌트도 변수 사용 */\n    .bg-white, .bg-card {\n      background-color: var(--card-bg) !important;\n    }\n    \n    .text-gray-900, .text-black {\n      color: var(--text-color) !important;\n    }\n    \n    .text-gray-600, .text-gray-500 {\n      color: var(--text-secondary) !important;\n    }\n  `;\n  \n  // 기본 폰트 로드\n  if (!document.getElementById('loop-fonts')) {\n    const fontLink = document.createElement('link');\n    fontLink.id = 'loop-fonts';\n    fontLink.rel = 'stylesheet';\n    fontLink.href = '/assets/fonts/font.css';\n    document.head.appendChild(fontLink);\n  }\n  \n  // 전자문서 스타일 로드\n  if (!document.getElementById('loop-electron-styles')) {\n    const electronStyleLink = document.createElement('link');\n    electronStyleLink.id = 'loop-electron-styles';\n    electronStyleLink.rel = 'stylesheet';\n    electronStyleLink.href = '/assets/styles/electron-styles.css';\n    document.head.appendChild(electronStyleLink);\n  }\n  \n  console.log('Loop CSS 변수 및 스타일 초기화 완료');\n  \n  // 일정 시간 후 DOM에 스타일이 제대로 적용되었는지 확인\n  setTimeout(() => {\n    const bodyBg = getComputedStyle(document.body).backgroundColor;\n    const isDark = document.documentElement.classList.contains('dark') || \n                   document.documentElement.classList.contains('dark-mode');\n    console.log(`현재 body 배경색: ${bodyBg}, 다크모드: ${isDark}`);\n  }, 1000);\n};\n\nexport default initStyles;\n"],"names":[],"mappings":"AAAA,gCAAgC;;;;AAChC,MAAM,aAAa;IACjB,uDAAuD;IACvD,IAAI,QAAQ,SAAS,cAAc,CAAC;IAEpC,8BAA8B;IAC9B,IAAI,CAAC,OAAO;QACV,QAAQ,SAAS,aAAa,CAAC;QAC/B,MAAM,EAAE,GAAG;QACX,SAAS,IAAI,CAAC,WAAW,CAAC;IAC5B;IAEA,MAAM,WAAW,GAAG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA2CrB,CAAC;IAED,WAAW;IACX,IAAI,CAAC,SAAS,cAAc,CAAC,eAAe;QAC1C,MAAM,WAAW,SAAS,aAAa,CAAC;QACxC,SAAS,EAAE,GAAG;QACd,SAAS,GAAG,GAAG;QACf,SAAS,IAAI,GAAG;QAChB,SAAS,IAAI,CAAC,WAAW,CAAC;IAC5B;IAEA,cAAc;IACd,IAAI,CAAC,SAAS,cAAc,CAAC,yBAAyB;QACpD,MAAM,oBAAoB,SAAS,aAAa,CAAC;QACjD,kBAAkB,EAAE,GAAG;QACvB,kBAAkB,GAAG,GAAG;QACxB,kBAAkB,IAAI,GAAG;QACzB,SAAS,IAAI,CAAC,WAAW,CAAC;IAC5B;IAEA,QAAQ,GAAG,CAAC;IAEZ,kCAAkC;IAClC,WAAW;QACT,MAAM,SAAS,iBAAiB,SAAS,IAAI,EAAE,eAAe;QAC9D,MAAM,SAAS,SAAS,eAAe,CAAC,SAAS,CAAC,QAAQ,CAAC,WAC5C,SAAS,eAAe,CAAC,SAAS,CAAC,QAAQ,CAAC;QAC3D,QAAQ,GAAG,CAAC,CAAC,aAAa,EAAE,OAAO,QAAQ,EAAE,QAAQ;IACvD,GAAG;AACL;uCAEe","debugId":null}},
    {"offset": {"line": 6083, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop_6/src/app/components/ui/client-icon.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { LucideIcon } from 'lucide-react';\n\ninterface ClientIconProps {\n  icon: LucideIcon;\n  className?: string;\n  size?: number;\n  [key: string]: any;\n}\n\n/**\n * 클라이언트 전용 아이콘 래퍼\n * Hydration mismatch 문제를 해결하기 위해 아이콘을 클라이언트에서만 렌더링\n */\nexport default function ClientIcon({ icon: Icon, className, size, ...props }: ClientIconProps) {\n  const [isClient, setIsClient] = useState(false);\n\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  // 서버 사이드에서는 빈 div로 렌더링\n  if (!isClient) {\n    return <div className={className} style={{ width: size || 24, height: size || 24 }} />;\n  }\n\n  // 클라이언트에서는 실제 아이콘 렌더링\n  return <Icon className={className} size={size} {...props} />;\n}\n"],"names":[],"mappings":";;;;AAEA;;;AAFA;;AAgBe,SAAS,WAAW,EAAE,MAAM,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAwB;;IAC3F,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR,YAAY;QACd;+BAAG,EAAE;IAEL,uBAAuB;IACvB,IAAI,CAAC,UAAU;QACb,qBAAO,6LAAC;YAAI,WAAW;YAAW,OAAO;gBAAE,OAAO,QAAQ;gBAAI,QAAQ,QAAQ;YAAG;;;;;;IACnF;IAEA,sBAAsB;IACtB,qBAAO,6LAAC;QAAK,WAAW;QAAW,MAAM;QAAO,GAAG,KAAK;;;;;;AAC1D;GAdwB;KAAA","debugId":null}},
    {"offset": {"line": 6138, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop_6/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { TypingBox } from './components/ui/typing-box';\nimport { StatsChart } from './components/ui/stats-chart';\nimport MemoryMonitor from './components/ui/memory-monitor';\nimport { TypingAnalyzer } from './components/ui/typing-analyzer';\nimport NativeModuleStatus from './components/ui/native-module-status';\nimport { Settings } from './components/ui/settings';\nimport ActivityMonitor from './components/ui/activity-monitor';\nimport initStyles from './utils/init-styles';\nimport { \n  Home, \n  BarChart3, \n  Settings as SettingsIcon, \n  Activity, \n  Database,\n  Cpu,\n  Monitor,\n  Menu,\n  X\n} from 'lucide-react';\nimport ClientIcon from './components/ui/client-icon';\n\ninterface Log {\n  id?: string;\n  content: string;\n  keyCount: number;\n  typingTime: number;\n  timestamp: string;\n  totalChars?: number;\n}\n\ntype ActiveTab = 'home' | 'stats' | 'analysis' | 'memory' | 'activity' | 'system' | 'settings';\n\nexport default function HomePage() {\n  const [activeTab, setActiveTab] = useState<ActiveTab>('home');\n  const [logs, setLogs] = useState<Log[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n\n  // 로그 데이터 로드 및 CSS 설정\n  useEffect(() => {\n    loadLogs();\n    \n    // CSS 스타일 강제 적용\n    initStyles();\n  }, []);\n\n  const loadLogs = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/getLogs');\n      const result = await response.json();\n      \n      if (result.success) {\n        setLogs(result.data.logs || []);\n      }\n    } catch (error) {\n      console.error('로그 로드 오류:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleTypingComplete = async (record: Omit<Log, 'id'>) => {\n    try {\n      const response = await fetch('/api/logs/save', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          ...record,\n          totalChars: record.content.length\n        }),\n      });\n\n      const result = await response.json();\n      \n      if (result.success) {\n        // 로그 목록에 새 기록 추가\n        setLogs(prev => [result.data, ...prev]);\n      }\n    } catch (error) {\n      console.error('로그 저장 오류:', error);\n    }\n  };\n\n  const navItems = [\n    { id: 'home' as ActiveTab, label: '홈', icon: Home },\n    { id: 'stats' as ActiveTab, label: '통계', icon: BarChart3 },\n    { id: 'analysis' as ActiveTab, label: '분석', icon: Activity },\n    { id: 'memory' as ActiveTab, label: '메모리', icon: Cpu },\n    { id: 'activity' as ActiveTab, label: '활성 상태', icon: Monitor },\n    { id: 'system' as ActiveTab, label: '시스템', icon: Database },\n    { id: 'settings' as ActiveTab, label: '설정', icon: SettingsIcon },\n  ];\n\n  const renderContent = () => {\n    switch (activeTab) {\n      case 'home':\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"bg-white dark:bg-gray-900 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n              <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\">\n                Loop 6 - 타이핑 분석 시스템\n              </h1>\n              <p className=\"text-gray-600 dark:text-gray-300 mb-6\">\n                실시간 타이핑 분석, GPU 가속, 메모리 최적화를 지원하는 고성능 데스크톱 애플리케이션입니다.\n              </p>\n            </div>\n            \n            <TypingBox onComplete={handleTypingComplete} />\n            \n            {logs.length > 0 && (\n              <div className=\"bg-white dark:bg-gray-900 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n                <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">최근 기록</h2>\n                <div className=\"space-y-2\">\n                  {logs.slice(0, 5).map((log, index) => (\n                    <div key={log.id || index} className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-800 rounded-md\">\n                      <div className=\"flex-1\">\n                        <p className=\"text-sm text-gray-900 dark:text-gray-100 truncate\">\n                          {log.content.substring(0, 50)}...\n                        </p>\n                        <div className=\"flex items-center gap-4 mt-1 text-xs text-gray-500 dark:text-gray-400\">\n                          <span>타자: {log.keyCount}</span>\n                          <span>시간: {log.typingTime}초</span>\n                          <span>타수: {log.typingTime > 0 ? Math.round((log.keyCount / log.typingTime) * 60) : 0}타/분</span>\n                        </div>\n                      </div>\n                      <span className=\"text-xs text-gray-400 dark:text-gray-500\">\n                        {new Date(log.timestamp).toLocaleString()}\n                      </span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n\n      case 'stats':\n        return <StatsChart logs={logs} />;\n\n      case 'analysis':\n        return <TypingAnalyzer />;\n\n      case 'memory':\n        return <MemoryMonitor />;\n\n      case 'activity':\n        return <ActivityMonitor />;\n\n      case 'system':\n        return <NativeModuleStatus />;\n\n      case 'settings':\n        return <Settings />;\n\n      default:\n        return <div>페이지를 찾을 수 없습니다.</div>;\n    }\n  };\n\n  return (\n    <div className=\"flex h-screen bg-gray-100 dark:bg-gray-950\">\n      {/* Sidebar */}\n      <div className={`${sidebarOpen ? 'w-64' : 'w-16'} bg-white dark:bg-gray-900 border-r border-gray-200 dark:border-gray-700 transition-all duration-300 flex flex-col`}>\n        {/* Header */}\n        <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"flex items-center justify-between\">\n            {sidebarOpen && (\n              <h1 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Loop 6</h1>\n            )}\n            <button\n              onClick={() => setSidebarOpen(!sidebarOpen)}\n              className=\"p-2 rounded-md hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors\"\n            >\n              {sidebarOpen ? <X className=\"w-4 h-4\" /> : <Menu className=\"w-4 h-4\" />}\n            </button>\n          </div>\n        </div>\n\n        {/* Navigation */}\n        <nav className=\"flex-1 p-4\">\n          <ul className=\"space-y-2\">\n            {navItems.map((item) => {\n              return (\n                <li key={item.id}>\n                  <button\n                    onClick={() => setActiveTab(item.id)}\n                    className={`w-full flex items-center gap-3 px-3 py-2 rounded-md transition-colors ${\n                      activeTab === item.id\n                        ? 'bg-blue-50 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400'\n                        : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800'\n                    }`}\n                    title={!sidebarOpen ? item.label : undefined}\n                  >\n                    <ClientIcon icon={item.icon} className=\"w-5 h-5 flex-shrink-0\" />\n                    {sidebarOpen && <span className=\"text-sm font-medium\">{item.label}</span>}\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        </nav>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"flex-1 overflow-hidden\">\n        <div className=\"h-full overflow-auto p-6\">\n          {loading ? (\n            <div className=\"flex items-center justify-center h-64\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500\"></div>\n              <span className=\"ml-2 text-gray-600 dark:text-gray-400\">로딩 중...</span>\n            </div>\n          ) : (\n            renderContent()\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}