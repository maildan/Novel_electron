{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/loop/loop_6/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { \n  Home, \n  BarChart3, \n  TrendingUp, \n  Settings, \n  Activity, \n  FileText, \n  Briefcase, \n  Code, \n  MessageSquare, \n  Monitor, \n  Bell, \n  RefreshCw,\n  X,\n  Check,\n  AlertTriangle,\n  Info,\n  Moon,\n  Sun,\n  Zap,\n  Volume2,\n  Shield,\n  Database,\n  Clock,\n  FileBarChart\n} from 'lucide-react';\n\n// 타입 정의\ninterface StatCard {\n  title: string;\n  value: string;\n  change: string;\n  trend: 'up' | 'down';\n  icon: React.ReactNode;\n}\n\ninterface NotificationItem {\n  id: string;\n  type: 'info' | 'warning' | 'success' | 'error';\n  message: string;\n  timestamp: Date;\n  read: boolean;\n}\n\ninterface SettingsState {\n  darkMode: boolean;\n  animations: boolean;\n  notifications: {\n    system: boolean;\n    memory: boolean;\n    taskComplete: boolean;\n    weeklyReport: boolean;\n  };\n  sound: boolean;\n}\n\n// 알림 드롭다운 컴포넌트\nconst NotificationDropdown: React.FC<{\n  notifications: NotificationItem[];\n  isOpen: boolean;\n  onClose: () => void;\n  onMarkAsRead: (id: string) => void;\n  onClearAll: () => void;\n}> = ({ notifications, isOpen, onClose, onMarkAsRead, onClearAll }) => {\n  if (!isOpen) return null;\n\n  const getNotificationIcon = (type: string) => {\n    switch (type) {\n      case 'success': return <Check className=\"w-4 h-4 text-green-600 dark:text-green-400\" />;\n      case 'warning': return <AlertTriangle className=\"w-4 h-4 text-yellow-600 dark:text-yellow-400\" />;\n      case 'error': return <X className=\"w-4 h-4 text-red-600 dark:text-red-400\" />;\n      default: return <Info className=\"w-4 h-4 text-blue-600 dark:text-blue-400\" />;\n    }\n  };\n\n  return (\n    <div className=\"absolute right-0 top-12 w-96 bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700 z-50\">\n      <div className=\"flex items-center justify-between p-4 border-b border-gray-200 dark:border-gray-700\">\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">알림</h3>\n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={onClearAll}\n            className=\"text-sm text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300\"\n          >\n            모두 지우기\n          </button>\n          <button\n            onClick={onClose}\n            className=\"p-1 hover:bg-gray-100 dark:hover:bg-gray-700 rounded\"\n          >\n            <X className=\"w-4 h-4 text-gray-500 dark:text-gray-400\" />\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"max-h-96 overflow-y-auto\">\n        {notifications.length === 0 ? (\n          <div className=\"p-4 text-center text-gray-500 dark:text-gray-400\">\n            새로운 알림이 없습니다\n          </div>\n        ) : (\n          notifications.map((notification) => (\n            <div\n              key={notification.id}\n              className={`p-4 border-b border-gray-100 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-700 cursor-pointer ${\n                !notification.read ? 'bg-blue-50 dark:bg-blue-900/20' : ''\n              }`}\n              onClick={() => onMarkAsRead(notification.id)}\n            >\n              <div className=\"flex items-start space-x-3\">\n                {getNotificationIcon(notification.type)}\n                <div className=\"flex-1 min-w-0\">\n                  <p className=\"text-sm text-gray-900 dark:text-gray-100 font-medium\">\n                    {notification.message}\n                  </p>\n                  <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                    {notification.timestamp.toLocaleString('ko-KR')}\n                  </p>\n                </div>\n                {!notification.read && (\n                  <div className=\"w-2 h-2 bg-blue-500 rounded-full\"></div>\n                )}\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\n// 설정 페이지 컴포넌트\nconst SettingsPage: React.FC<{\n  settings: SettingsState;\n  onSettingsChange: (settings: SettingsState) => void;\n}> = ({ settings, onSettingsChange }) => {\n  const updateSetting = (key: string, value: any) => {\n    if (key.includes('.')) {\n      const [parent, child] = key.split('.');\n      const parentObj = settings[parent as keyof SettingsState];\n      if (typeof parentObj === 'object' && parentObj !== null) {\n        onSettingsChange({\n          ...settings,\n          [parent]: {\n            ...parentObj,\n            [child]: value\n          }\n        });\n      }\n    } else {\n      onSettingsChange({\n        ...settings,\n        [key]: value\n      });\n    }\n  };\n\n  const ToggleSwitch = ({ enabled, onChange }: { enabled: boolean; onChange: (value: boolean) => void }) => (\n    <button\n      onClick={() => onChange(!enabled)}\n      className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 ${\n        enabled ? 'bg-blue-600' : 'bg-gray-300 dark:bg-gray-600'\n      }`}\n    >\n      <span\n        className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n          enabled ? 'translate-x-6' : 'translate-x-1'\n        }`}\n      />\n    </button>\n  );\n\n  return (\n    <div className=\"space-y-8\">\n      <h1 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">설정</h1>\n      \n      {/* 테마 설정 */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm border border-gray-200 dark:border-gray-700\">\n        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4 flex items-center\">\n          <Moon className=\"w-5 h-5 mr-2\" />\n          테마 설정\n        </h2>\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <label className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">다크 모드</label>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">어두운 테마로 전환합니다</p>\n            </div>\n            <ToggleSwitch \n              enabled={settings.darkMode} \n              onChange={(value) => updateSetting('darkMode', value)} \n            />\n          </div>\n        </div>\n      </div>\n\n      {/* 애니메이션 설정 */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm border border-gray-200 dark:border-gray-700\">\n        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4 flex items-center\">\n          <Zap className=\"w-5 h-5 mr-2\" />\n          애니메이션 효과\n        </h2>\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <label className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">애니메이션 효과</label>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">부드러운 전환 효과를 활성화합니다</p>\n            </div>\n            <ToggleSwitch \n              enabled={settings.animations} \n              onChange={(value) => updateSetting('animations', value)} \n            />\n          </div>\n        </div>\n      </div>\n\n      {/* 알림 설정 */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm border border-gray-200 dark:border-gray-700\">\n        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4 flex items-center\">\n          <Bell className=\"w-5 h-5 mr-2\" />\n          알림 설정\n        </h2>\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <label className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">시스템 알림</label>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">시스템 상태 알림을 받습니다</p>\n            </div>\n            <ToggleSwitch \n              enabled={settings.notifications.system} \n              onChange={(value) => updateSetting('notifications.system', value)} \n            />\n          </div>\n          \n          <div className=\"flex items-center justify-between\">\n            <div>\n              <label className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">메모리 경고</label>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">메모리 사용량 경고를 받습니다</p>\n            </div>\n            <ToggleSwitch \n              enabled={settings.notifications.memory} \n              onChange={(value) => updateSetting('notifications.memory', value)} \n            />\n          </div>\n          \n          <div className=\"flex items-center justify-between\">\n            <div>\n              <label className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">작업 완료 알림</label>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">작업 완료 시 알림을 받습니다</p>\n            </div>\n            <ToggleSwitch \n              enabled={settings.notifications.taskComplete} \n              onChange={(value) => updateSetting('notifications.taskComplete', value)} \n            />\n          </div>\n          \n          <div className=\"flex items-center justify-between\">\n            <div>\n              <label className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">주간 리포트</label>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">주간 활동 리포트를 받습니다</p>\n            </div>\n            <ToggleSwitch \n              enabled={settings.notifications.weeklyReport} \n              onChange={(value) => updateSetting('notifications.weeklyReport', value)} \n            />\n          </div>\n        </div>\n      </div>\n\n      {/* 사운드 설정 */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm border border-gray-200 dark:border-gray-700\">\n        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4 flex items-center\">\n          <Volume2 className=\"w-5 h-5 mr-2\" />\n          사운드 설정\n        </h2>\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <label className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">알림 사운드</label>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">알림 시 사운드를 재생합니다</p>\n            </div>\n            <ToggleSwitch \n              enabled={settings.sound} \n              onChange={(value) => updateSetting('sound', value)} \n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// 메인 컴포넌트\nexport default function HomePage() {\n  const [activeTab, setActiveTab] = useState('home');\n  const [isNotificationOpen, setIsNotificationOpen] = useState(false);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  \n  // 설정 상태\n  const [settings, setSettings] = useState<SettingsState>({\n    darkMode: false,\n    animations: true,\n    notifications: {\n      system: true,\n      memory: true,\n      taskComplete: true,\n      weeklyReport: false\n    },\n    sound: true\n  });\n\n  // 알림 상태\n  const [notifications, setNotifications] = useState<NotificationItem[]>([\n    { \n      id: '1', \n      type: 'info', \n      message: 'Memory monitoring active', \n      timestamp: new Date(), \n      read: false \n    },\n    { \n      id: '2', \n      type: 'success', \n      message: 'Database connection established', \n      timestamp: new Date(Date.now() - 300000), \n      read: false \n    },\n    { \n      id: '3', \n      type: 'warning', \n      message: 'High memory usage detected (85%)', \n      timestamp: new Date(Date.now() - 600000), \n      read: true \n    }\n  ]);\n\n  // 실시간 데이터 확장\n  const [realTimeStats, setRealTimeStats] = useState({\n    cpuUsage: 45,\n    memoryUsage: 62,\n    activeConnections: 12,\n    dataTransfer: '1.2MB/s',\n    diskUsage: 78,\n    networkLatency: 25,\n    uptime: '2d 14h 32m',\n    temperature: 42\n  });\n\n  // MCP 메모리 도구를 사용해서 데이터 확장\n  useEffect(() => {\n    const expandDataWithMCP = async () => {\n      try {\n        // 메모리에서 추가 데이터 가져오기\n        const memoryData = await fetch('/api/memory-stats').catch(() => null);\n        if (memoryData) {\n          const data = await memoryData.json();\n          setRealTimeStats(prev => ({\n            ...prev,\n            ...data\n          }));\n        }\n      } catch (error) {\n        console.log('MCP memory data fetch failed, using simulated data');\n      }\n    };\n\n    expandDataWithMCP();\n  }, []);\n\n  // 실시간 데이터 업데이트\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setRealTimeStats(prev => {\n        const newStats = {\n          cpuUsage: Math.max(10, Math.min(90, prev.cpuUsage + (Math.random() - 0.5) * 10)),\n          memoryUsage: Math.max(20, Math.min(95, prev.memoryUsage + (Math.random() - 0.5) * 5)),\n          activeConnections: Math.max(0, Math.min(50, prev.activeConnections + Math.floor((Math.random() - 0.5) * 3))),\n          dataTransfer: `${(Math.random() * 5 + 0.5).toFixed(1)}MB/s`,\n          diskUsage: Math.max(50, Math.min(95, prev.diskUsage + (Math.random() - 0.5) * 2)),\n          networkLatency: Math.max(10, Math.min(100, prev.networkLatency + (Math.random() - 0.5) * 10)),\n          temperature: Math.max(35, Math.min(80, prev.temperature + (Math.random() - 0.5) * 3)),\n          uptime: prev.uptime // 업타임은 실제로는 증가해야 하지만 시뮬레이션에서는 고정\n        };\n\n        // 메모리 경고 알림 추가\n        if (newStats.memoryUsage > 85 && settings.notifications.memory) {\n          const newNotification: NotificationItem = {\n            id: Date.now().toString(),\n            type: 'warning',\n            message: `High memory usage: ${newStats.memoryUsage.toFixed(1)}%`,\n            timestamp: new Date(),\n            read: false\n          };\n          setNotifications(prevNotifs => [newNotification, ...prevNotifs.slice(0, 9)]);\n        }\n\n        return newStats;\n      });\n    }, 3000);\n\n    return () => clearInterval(interval);\n  }, [settings.notifications.memory]);\n\n  const handleRefresh = async () => {\n    setIsRefreshing(true);\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    setIsRefreshing(false);\n    \n    if (settings.notifications.system) {\n      const newNotification: NotificationItem = {\n        id: Date.now().toString(),\n        type: 'success',\n        message: 'Data refreshed successfully',\n        timestamp: new Date(),\n        read: false\n      };\n      setNotifications(prev => [newNotification, ...prev.slice(0, 9)]);\n    }\n  };\n\n  const markNotificationAsRead = (id: string) => {\n    setNotifications(prev => \n      prev.map(notif => \n        notif.id === id ? { ...notif, read: true } : notif\n      )\n    );\n  };\n\n  const clearAllNotifications = () => {\n    setNotifications([]);\n  };\n\n  const statCards: StatCard[] = [\n    {\n      title: '총 타이핑 시간',\n      value: '47.2h',\n      change: '+12%',\n      trend: 'up',\n      icon: <Activity className=\"w-5 h-5\" />\n    },\n    {\n      title: '문서 작업',\n      value: '142',\n      change: '+8%',\n      trend: 'up',\n      icon: <FileText className=\"w-5 h-5\" />\n    },\n    {\n      title: '코딩 세션',\n      value: '89',\n      change: '-2%',\n      trend: 'down',\n      icon: <Code className=\"w-5 h-5\" />\n    },\n    {\n      title: '메모리 사용률',\n      value: `${realTimeStats.memoryUsage.toFixed(1)}%`,\n      change: '+5%',\n      trend: 'up',\n      icon: <Monitor className=\"w-5 h-5\" />\n    }\n  ];\n\n  const navigationItems = [\n    { id: 'home', label: '홈', icon: <Home className=\"w-4 h-4\" /> },\n    { id: 'stats', label: '통계', icon: <BarChart3 className=\"w-4 h-4\" /> },\n    { id: 'analysis', label: '분석', icon: <TrendingUp className=\"w-4 h-4\" /> },\n    { id: 'settings', label: '설정', icon: <Settings className=\"w-4 h-4\" /> }\n  ];\n\n  const sectionItems = [\n    { id: 'typing', label: '타이핑 분석', icon: <Activity className=\"w-5 h-5\" />, color: 'bg-blue-500' },\n    { id: 'docs', label: 'Documents', icon: <FileText className=\"w-5 h-5\" />, color: 'bg-green-500' },\n    { id: 'office', label: 'Office 작업', icon: <Briefcase className=\"w-5 h-5\" />, color: 'bg-orange-500' },\n    { id: 'coding', label: 'Coding', icon: <Code className=\"w-5 h-5\" />, color: 'bg-purple-500' },\n    { id: 'sns', label: 'SNS 활동', icon: <MessageSquare className=\"w-5 h-5\" />, color: 'bg-pink-500' },\n    { id: 'monitor', label: '실시간 모니터', icon: <Monitor className=\"w-5 h-5\" />, color: 'bg-cyan-500' }\n  ];\n\n  const unreadCount = notifications.filter(n => !n.read).length;\n\n  // 메인 컨텐츠 렌더링\n  const renderMainContent = () => {\n    switch (activeTab) {\n      case 'settings':\n        return <SettingsPage settings={settings} onSettingsChange={setSettings} />;\n      \n      case 'stats':\n        return (\n          <div className=\"space-y-6\">\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">통계</h1>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              {statCards.map((card, index) => (\n                <div\n                  key={index}\n                  className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm border border-gray-200 dark:border-gray-700\"\n                >\n                  <div className=\"flex items-center justify-between mb-4\">\n                    <div className=\"p-2 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300\">\n                      {card.icon}\n                    </div>\n                    <span className={`text-sm font-medium ${\n                      card.trend === 'up' ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'\n                    }`}>\n                      {card.change}\n                    </span>\n                  </div>\n                  <h3 className=\"text-sm font-medium text-gray-600 dark:text-gray-400 mb-1\">{card.title}</h3>\n                  <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">{card.value}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        );\n      \n      case 'analysis':\n        return (\n          <div className=\"space-y-6\">\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">분석</h1>\n            <div className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm border border-gray-200 dark:border-gray-700\">\n              <p className=\"text-gray-600 dark:text-gray-400\">분석 기능이 곧 제공될 예정입니다.</p>\n            </div>\n          </div>\n        );\n      \n      default:\n        return (\n          <div className=\"space-y-8\">\n            {/* 통계 카드 그리드 */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              {statCards.map((card, index) => (\n                <div\n                  key={index}\n                  className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm border border-gray-200 dark:border-gray-700 hover:shadow-md transition-shadow duration-200\"\n                >\n                  <div className=\"flex items-center justify-between mb-4\">\n                    <div className=\"p-2 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300\">\n                      {card.icon}\n                    </div>\n                    <span className={`text-sm font-medium ${\n                      card.trend === 'up' ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'\n                    }`}>\n                      {card.change}\n                    </span>\n                  </div>\n                  <h3 className=\"text-sm font-medium text-gray-600 dark:text-gray-400 mb-1\">{card.title}</h3>\n                  <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">{card.value}</p>\n                </div>\n              ))}\n            </div>\n\n            {/* 섹션 그리드 */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {sectionItems.map((section) => (\n                <button\n                  key={section.id}\n                  className=\"\n                    bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm border border-gray-200 dark:border-gray-700\n                    hover:shadow-md hover:scale-105 transition-all duration-200\n                    focus:outline-none focus:ring-0 hover:outline-none\n                    text-left\n                  \"\n                >\n                  <div className=\"flex items-center space-x-4 mb-4\">\n                    <div className={`p-3 rounded-lg ${section.color} text-white`}>\n                      {section.icon}\n                    </div>\n                    <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">{section.label}</h3>\n                  </div>\n                  <p className=\"text-gray-600 dark:text-gray-400 text-sm\">\n                    {section.id === 'typing' && '타이핑 패턴과 속도를 분석합니다'}\n                    {section.id === 'docs' && '문서 작업 현황을 확인합니다'}\n                    {section.id === 'office' && 'Office 애플리케이션 사용량을 추적합니다'}\n                    {section.id === 'coding' && '코딩 활동과 프로젝트를 관리합니다'}\n                    {section.id === 'sns' && 'SNS 및 커뮤니케이션 활동을 모니터링합니다'}\n                    {section.id === 'monitor' && '시스템 리소스를 실시간으로 모니터링합니다'}\n                  </p>\n                </button>\n              ))}\n            </div>\n\n            {/* 실시간 통계 대시보드 */}\n            <div className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm border border-gray-200 dark:border-gray-700\">\n              <h2 className=\"text-xl font-bold text-gray-900 dark:text-gray-100 mb-6\">실시간 시스템 모니터</h2>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">CPU 사용률</span>\n                    <span className=\"text-sm font-bold text-gray-900 dark:text-gray-100\">{realTimeStats.cpuUsage.toFixed(1)}%</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n                    <div \n                      className=\"bg-blue-500 h-2 rounded-full transition-all duration-500\"\n                      style={{ width: `${realTimeStats.cpuUsage}%` }}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">메모리 사용률</span>\n                    <span className=\"text-sm font-bold text-gray-900 dark:text-gray-100\">{realTimeStats.memoryUsage.toFixed(1)}%</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n                    <div \n                      className=\"bg-green-500 h-2 rounded-full transition-all duration-500\"\n                      style={{ width: `${realTimeStats.memoryUsage}%` }}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">디스크 사용률</span>\n                    <span className=\"text-sm font-bold text-gray-900 dark:text-gray-100\">{realTimeStats.diskUsage}%</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n                    <div \n                      className=\"bg-orange-500 h-2 rounded-full transition-all duration-500\"\n                      style={{ width: `${realTimeStats.diskUsage}%` }}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">온도</span>\n                    <span className=\"text-sm font-bold text-gray-900 dark:text-gray-100\">{realTimeStats.temperature}°C</span>\n                  </div>\n                  <div className=\"text-xs text-gray-600 dark:text-gray-400\">CPU 온도</div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">활성 연결</span>\n                    <span className=\"text-sm font-bold text-gray-900 dark:text-gray-100\">{realTimeStats.activeConnections}</span>\n                  </div>\n                  <div className=\"text-xs text-gray-600 dark:text-gray-400\">개의 활성 연결</div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">데이터 전송</span>\n                    <span className=\"text-sm font-bold text-gray-900 dark:text-gray-100\">{realTimeStats.dataTransfer}</span>\n                  </div>\n                  <div className=\"text-xs text-gray-600 dark:text-gray-400\">실시간 전송률</div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">네트워크 지연</span>\n                    <span className=\"text-sm font-bold text-gray-900 dark:text-gray-100\">{realTimeStats.networkLatency}ms</span>\n                  </div>\n                  <div className=\"text-xs text-gray-600 dark:text-gray-400\">평균 응답 시간</div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">가동 시간</span>\n                    <span className=\"text-sm font-bold text-gray-900 dark:text-gray-100\">{realTimeStats.uptime}</span>\n                  </div>\n                  <div className=\"text-xs text-gray-600 dark:text-gray-400\">연속 실행 시간</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className={`min-h-screen transition-colors duration-300 ${\n      settings.darkMode ? 'dark bg-gray-900' : 'bg-gray-50'\n    }`}>\n      {/* 네비게이션 헤더 */}\n      <header className=\"bg-white dark:bg-gray-800 shadow-sm border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            {/* 로고 */}\n            <div className=\"flex items-center\">\n              <h1 className=\"text-xl font-bold text-gray-900 dark:text-gray-100\">Loop 6</h1>\n            </div>\n\n            {/* 네비게이션 버튼들 */}\n            <nav className=\"flex items-center space-x-8\">\n              {navigationItems.map((item) => (\n                <button\n                  key={item.id}\n                  onClick={() => setActiveTab(item.id)}\n                  className={`\n                    flex items-center space-x-2 px-4 py-2 rounded-lg transition-all duration-200\n                    focus:outline-none focus:ring-0 hover:outline-none\n                    ${activeTab === item.id\n                      ? 'bg-gray-900 dark:bg-gray-100 text-white dark:text-gray-900'\n                      : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 hover:text-gray-900 dark:hover:text-gray-100'\n                    }\n                  `}\n                >\n                  {item.icon}\n                  <span className=\"font-medium\">{item.label}</span>\n                </button>\n              ))}\n            </nav>\n\n            {/* 알림 및 새로고침 버튼 */}\n            <div className=\"flex items-center space-x-4\">\n              <button\n                onClick={handleRefresh}\n                disabled={isRefreshing}\n                className=\"\n                  p-2 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300\n                  hover:bg-gray-200 dark:hover:bg-gray-600 hover:text-gray-900 dark:hover:text-gray-100\n                  focus:outline-none focus:ring-0 hover:outline-none\n                  transition-all duration-200 disabled:opacity-50\n                \"\n              >\n                <RefreshCw className={`w-4 h-4 ${isRefreshing ? 'animate-spin' : ''}`} />\n              </button>\n              \n              <div className=\"relative\">\n                <button \n                  onClick={() => setIsNotificationOpen(!isNotificationOpen)}\n                  className=\"\n                    p-2 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300\n                    hover:bg-gray-200 dark:hover:bg-gray-600 hover:text-gray-900 dark:hover:text-gray-100\n                    focus:outline-none focus:ring-0 hover:outline-none\n                    transition-all duration-200 relative\n                  \"\n                >\n                  <Bell className=\"w-4 h-4\" />\n                  {unreadCount > 0 && (\n                    <span className=\"absolute -top-1 -right-1 w-5 h-5 bg-red-500 text-white text-xs rounded-full flex items-center justify-center\">\n                      {unreadCount > 9 ? '9+' : unreadCount}\n                    </span>\n                  )}\n                </button>\n                \n                <NotificationDropdown\n                  notifications={notifications}\n                  isOpen={isNotificationOpen}\n                  onClose={() => setIsNotificationOpen(false)}\n                  onMarkAsRead={markNotificationAsRead}\n                  onClearAll={clearAllNotifications}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* 메인 컨텐츠 */}\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {renderMainContent()}\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}